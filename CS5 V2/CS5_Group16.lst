

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Sat Dec 15 15:51:42 2018

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F737
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     5                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	intentry,global,class=CODE,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	dabs	1,0x7E,2
    35  0000                     	;# 
    36  0001                     	;# 
    37  0002                     	;# 
    38  0003                     	;# 
    39  0004                     	;# 
    40  0005                     	;# 
    41  0006                     	;# 
    42  0007                     	;# 
    43  0009                     	;# 
    44  000A                     	;# 
    45  000B                     	;# 
    46  000C                     	;# 
    47  000D                     	;# 
    48  000E                     	;# 
    49  000E                     	;# 
    50  000F                     	;# 
    51  0010                     	;# 
    52  0011                     	;# 
    53  0012                     	;# 
    54  0013                     	;# 
    55  0014                     	;# 
    56  0015                     	;# 
    57  0015                     	;# 
    58  0016                     	;# 
    59  0017                     	;# 
    60  0018                     	;# 
    61  0019                     	;# 
    62  001A                     	;# 
    63  001B                     	;# 
    64  001B                     	;# 
    65  001C                     	;# 
    66  001D                     	;# 
    67  001E                     	;# 
    68  001F                     	;# 
    69  0081                     	;# 
    70  0085                     	;# 
    71  0086                     	;# 
    72  0087                     	;# 
    73  008C                     	;# 
    74  008D                     	;# 
    75  008E                     	;# 
    76  008F                     	;# 
    77  0090                     	;# 
    78  0091                     	;# 
    79  0092                     	;# 
    80  0093                     	;# 
    81  0094                     	;# 
    82  0095                     	;# 
    83  0095                     	;# 
    84  0096                     	;# 
    85  0097                     	;# 
    86  0098                     	;# 
    87  0099                     	;# 
    88  009B                     	;# 
    89  009C                     	;# 
    90  009D                     	;# 
    91  009E                     	;# 
    92  009F                     	;# 
    93  0105                     	;# 
    94  0109                     	;# 
    95  010C                     	;# 
    96  010D                     	;# 
    97  010E                     	;# 
    98  010F                     	;# 
    99  018C                     	;# 
   100                           
   101                           	psect	nvBANK0
   102  005C                     __pnvBANK0:	
   103  005C                     _K_i:	
   104  005C                     	ds	3
   105  005F                     _K_p:	
   106  005F                     	ds	3
   107  0062                     _duty:	
   108  0062                     	ds	3
   109  0065                     _vError:	
   110  0065                     	ds	2
   111  0067                     _vRef:	
   112  0067                     	ds	2
   113                           
   114                           	psect	nvBANK1
   115  00A5                     __pnvBANK1:	
   116  00A5                     _K_d:	
   117  00A5                     	ds	3
   118  001F                     _ADCON0	set	31
   119  001E                     _ADRESH	set	30
   120  0017                     _CCP1CON	set	23
   121  0015                     _CCPR1L	set	21
   122  0006                     _PORTB	set	6
   123  0007                     _PORTC	set	7
   124  0012                     _T2CON	set	18
   125  0066                     _ADIF	set	102
   126  005F                     _GIE	set	95
   127  00FA                     _GO	set	250
   128  005E                     _PEIE	set	94
   129  003C                     _RC4	set	60
   130  003D                     _RC5	set	61
   131  002C                     _blackButton	set	44
   132  0039                     _brake	set	57
   133  003B                     _eddySensor	set	59
   134  003E                     _encoder	set	62
   135  009F                     _ADCON1	set	159
   136  0092                     _PR2	set	146
   137  0085                     _TRISA	set	133
   138  0086                     _TRISB	set	134
   139  0087                     _TRISC	set	135
   140  0466                     _ADIE	set	1126
   141                           
   142                           ; #config settings
   143  0000                     
   144                           	psect	cinit
   145  0013                     start_initialization:	
   146  0013                     __initialization:	
   147                           
   148                           ; Clear objects allocated to COMMON
   149  0013  01F9               	clrf	__pbssCOMMON& (0+127)
   150  0014  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   151  0015  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
   152  0016  01FC               	clrf	(__pbssCOMMON+3)& (0+127)
   153  0017  01FD               	clrf	(__pbssCOMMON+4)& (0+127)
   154                           
   155                           ; Clear objects allocated to BANK0
   156  0018  1383               	bcf	3,7	;select IRP bank0
   157  0019  304E               	movlw	low __pbssBANK0
   158  001A  0084               	movwf	4
   159  001B  305C               	movlw	low (__pbssBANK0+14)
   160  001C  118A  27A6         	fcall	clear_ram0
   161  001E                     end_of_initialization:	
   162                           ;End of C runtime variable initialization code
   163                           
   164  001E                     __end_of__initialization:	
   165  001E  0183               	clrf	3
   166  001F  118A  2F1B         	ljmp	_main	;jump to C main() function
   167                           
   168                           	psect	bssCOMMON
   169  0079                     __pbssCOMMON:	
   170  0079                     _Count:	
   171  0079                     	ds	2
   172  007B                     _i:	
   173  007B                     	ds	2
   174  007D                     _State:	
   175  007D                     	ds	1
   176                           
   177                           	psect	bssBANK0
   178  004E                     __pbssBANK0:	
   179  004E                     _Speed:	
   180  004E                     	ds	2
   181  0050                     _aSpeed:	
   182  0050                     	ds	2
   183  0052                     _baseVel:	
   184  0052                     	ds	2
   185  0054                     _eCount:	
   186  0054                     	ds	2
   187  0056                     _enCount:	
   188  0056                     	ds	2
   189  0058                     _vErrorDiff:	
   190  0058                     	ds	2
   191  005A                     _vErrorInt:	
   192  005A                     	ds	2
   193                           
   194                           	psect	clrtext
   195  07A6                     clear_ram0:	
   196                           ;	Called with FSR containing the base address, and
   197                           ;	W with the last address+1
   198                           
   199  07A6  0064               	clrwdt	;clear the watchdog before getting into this loop
   200  07A7                     clrloop0:	
   201  07A7  0180               	clrf	0	;clear RAM location pointed to by FSR
   202  07A8  0A84               	incf	4,f	;increment pointer
   203  07A9  0604               	xorwf	4,w	;XOR with final address
   204  07AA  1903               	btfsc	3,2	;have we reached the end yet?
   205  07AB  3400               	retlw	0	;all done for this memory range, return
   206  07AC  0604               	xorwf	4,w	;XOR again to restore value
   207  07AD  2FA7               	goto	clrloop0	;do the next byte
   208                           
   209                           	psect	cstackBANK1
   210  00A0                     __pcstackBANK1:	
   211  00A0                     ___ftadd@sign:	
   212                           
   213                           ; 1 bytes @ 0x0
   214  00A0                     	ds	1
   215  00A1                     ___ftadd@exp2:	
   216                           
   217                           ; 1 bytes @ 0x1
   218  00A1                     	ds	1
   219  00A2                     ___ftadd@exp1:	
   220                           
   221                           ; 1 bytes @ 0x2
   222  00A2                     	ds	1
   223  00A3                     ??_PIDControl:	
   224                           
   225                           ; 0 bytes @ 0x3
   226  00A3                     	ds	2
   227                           
   228                           	psect	cstackCOMMON
   229  0070                     __pcstackCOMMON:	
   230  0070                     ?_SwitchDelay:	
   231  0070                     ?_flashDelay:	
   232                           ; 0 bytes @ 0x0
   233                           
   234  0070                     ?_initPort:	
   235                           ; 0 bytes @ 0x0
   236                           
   237  0070                     ?_initAtoD_PWM:	
   238                           ; 0 bytes @ 0x0
   239                           
   240  0070                     ?_brakeFlash:	
   241                           ; 0 bytes @ 0x0
   242                           
   243  0070                     ?_countUp:	
   244                           ; 0 bytes @ 0x0
   245                           
   246  0070                     ?_PControl:	
   247                           ; 0 bytes @ 0x0
   248                           
   249  0070                     ?_PIDControl:	
   250                           ; 0 bytes @ 0x0
   251                           
   252  0070                     ?_indexMotor:	
   253                           ; 0 bytes @ 0x0
   254                           
   255  0070                     ?_isrAD:	
   256                           ; 0 bytes @ 0x0
   257                           
   258  0070                     ?_Mode0:	
   259                           ; 0 bytes @ 0x0
   260                           
   261  0070                     ?_Mode3:	
   262                           ; 0 bytes @ 0x0
   263                           
   264  0070                     ?_main:	
   265                           ; 0 bytes @ 0x0
   266                           
   267  0070                     ?___awdiv:	
   268                           ; 0 bytes @ 0x0
   269                           
   270  0070                     ___awdiv@divisor:	
   271                           ; 2 bytes @ 0x0
   272                           
   273                           
   274                           ; 2 bytes @ 0x0
   275  0070                     	ds	2
   276  0072                     ___awdiv@dividend:	
   277                           
   278                           ; 2 bytes @ 0x2
   279  0072                     	ds	2
   280  0074                     ??___awdiv:	
   281                           
   282                           ; 0 bytes @ 0x4
   283  0074                     	ds	1
   284  0075                     ___awdiv@counter:	
   285                           
   286                           ; 1 bytes @ 0x5
   287  0075                     	ds	1
   288  0076                     ___awdiv@sign:	
   289                           
   290                           ; 1 bytes @ 0x6
   291  0076                     	ds	1
   292  0077                     ___awdiv@quotient:	
   293                           
   294                           ; 2 bytes @ 0x7
   295  0077                     	ds	2
   296                           
   297                           	psect	cstackBANK0
   298  0020                     __pcstackBANK0:	
   299  0020                     ??_isrAD:	
   300                           
   301                           ; 0 bytes @ 0x0
   302  0020                     	ds	6
   303  0026                     ??_SwitchDelay:	
   304  0026                     ??_flashDelay:	
   305                           ; 0 bytes @ 0x6
   306                           
   307  0026                     ??_initPort:	
   308                           ; 0 bytes @ 0x6
   309                           
   310  0026                     ??_initAtoD_PWM:	
   311                           ; 0 bytes @ 0x6
   312                           
   313  0026                     ??_countUp:	
   314                           ; 0 bytes @ 0x6
   315                           
   316  0026                     ?___ftge:	
   317                           ; 0 bytes @ 0x6
   318                           
   319  0026                     ?___ftpack:	
   320                           ; 1 bit 
   321                           
   322  0026                     ?___fttol:	
   323                           ; 3 bytes @ 0x6
   324                           
   325  0026                     ___ftpack@arg:	
   326                           ; 4 bytes @ 0x6
   327                           
   328  0026                     ___ftge@ff1:	
   329                           ; 3 bytes @ 0x6
   330                           
   331  0026                     ___fttol@f1:	
   332                           ; 3 bytes @ 0x6
   333                           
   334                           
   335                           ; 3 bytes @ 0x6
   336  0026                     	ds	3
   337  0029                     ??_brakeFlash:	
   338  0029                     ___ftpack@exp:	
   339                           ; 0 bytes @ 0x9
   340                           
   341  0029                     ___ftge@ff2:	
   342                           ; 1 bytes @ 0x9
   343                           
   344                           
   345                           ; 3 bytes @ 0x9
   346  0029                     	ds	1
   347  002A                     ??___fttol:	
   348  002A                     ___ftpack@sign:	
   349                           ; 0 bytes @ 0xA
   350                           
   351                           
   352                           ; 1 bytes @ 0xA
   353  002A                     	ds	1
   354  002B                     ??___ftpack:	
   355                           
   356                           ; 0 bytes @ 0xB
   357  002B                     	ds	1
   358  002C                     ??___ftge:	
   359                           
   360                           ; 0 bytes @ 0xC
   361  002C                     	ds	2
   362  002E                     ?___awtoft:	
   363  002E                     ___fttol@sign1:	
   364                           ; 3 bytes @ 0xE
   365                           
   366  002E                     ___awtoft@c:	
   367                           ; 1 bytes @ 0xE
   368                           
   369                           
   370                           ; 2 bytes @ 0xE
   371  002E                     	ds	1
   372  002F                     ___fttol@lval:	
   373                           
   374                           ; 4 bytes @ 0xF
   375  002F                     	ds	2
   376  0031                     ??___awtoft:	
   377                           
   378                           ; 0 bytes @ 0x11
   379  0031                     	ds	2
   380  0033                     ___awtoft@sign:	
   381  0033                     ___fttol@exp1:	
   382                           ; 1 bytes @ 0x13
   383                           
   384                           
   385                           ; 1 bytes @ 0x13
   386  0033                     	ds	1
   387  0034                     ?___ftmul:	
   388  0034                     ___ftmul@f1:	
   389                           ; 3 bytes @ 0x14
   390                           
   391                           
   392                           ; 3 bytes @ 0x14
   393  0034                     	ds	3
   394  0037                     ___ftmul@f2:	
   395                           
   396                           ; 3 bytes @ 0x17
   397  0037                     	ds	3
   398  003A                     ??___ftmul:	
   399                           
   400                           ; 0 bytes @ 0x1A
   401  003A                     	ds	4
   402  003E                     ___ftmul@exp:	
   403                           
   404                           ; 1 bytes @ 0x1E
   405  003E                     	ds	1
   406  003F                     ___ftmul@f3_as_product:	
   407                           
   408                           ; 3 bytes @ 0x1F
   409  003F                     	ds	3
   410  0042                     ___ftmul@cntr:	
   411                           
   412                           ; 1 bytes @ 0x22
   413  0042                     	ds	1
   414  0043                     ___ftmul@sign:	
   415                           
   416                           ; 1 bytes @ 0x23
   417  0043                     	ds	1
   418  0044                     ??_PControl:	
   419  0044                     ?___ftadd:	
   420                           ; 0 bytes @ 0x24
   421                           
   422  0044                     ___ftadd@f1:	
   423                           ; 3 bytes @ 0x24
   424                           
   425                           
   426                           ; 3 bytes @ 0x24
   427  0044                     	ds	2
   428  0046                     ??_indexMotor:	
   429  0046                     ??_Mode0:	
   430                           ; 0 bytes @ 0x26
   431                           
   432                           
   433                           ; 0 bytes @ 0x26
   434  0046                     	ds	1
   435  0047                     ___ftadd@f2:	
   436                           
   437                           ; 3 bytes @ 0x27
   438  0047                     	ds	3
   439  004A                     ??___ftadd:	
   440                           
   441                           ; 0 bytes @ 0x2A
   442  004A                     	ds	4
   443  004E                     ??_Mode3:	
   444  004E                     ??_main:	
   445                           ; 0 bytes @ 0x2E
   446                           
   447                           
   448                           	psect	maintext
   449  071B                     __pmaintext:	
   450                           ; 0 bytes @ 0x2E
   451 ;;
   452 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   453 ;;
   454 ;; *************** function _main *****************
   455 ;; Defined at:
   456 ;;		line 325 in file "C:\Users\Robert Kydd\Documents\Personal\HW\Mechatronics\CS5 V2\CS5_Group16.c"
   457 ;; Parameters:    Size  Location     Type
   458 ;;		None
   459 ;; Auto vars:     Size  Location     Type
   460 ;;		None
   461 ;; Return value:  Size  Location     Type
   462 ;;		None               void
   463 ;; Registers used:
   464 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   465 ;; Tracked objects:
   466 ;;		On entry : 17F/0
   467 ;;		On exit  : 0/0
   468 ;;		Unchanged: 0/0
   469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   470 ;;      Params:         0       0       0       0       0
   471 ;;      Locals:         0       0       0       0       0
   472 ;;      Temps:          0       0       0       0       0
   473 ;;      Totals:         0       0       0       0       0
   474 ;;Total ram usage:        0 bytes
   475 ;; Hardware stack levels required when called:    6
   476 ;; This function calls:
   477 ;;		_Mode0
   478 ;;		_Mode3
   479 ;;		_SwitchDelay
   480 ;;		_indexMotor
   481 ;;		_initAtoD_PWM
   482 ;;		_initPort
   483 ;; This function is called by:
   484 ;;		Startup code after reset
   485 ;; This function uses a non-reentrant model
   486 ;;
   487                           
   488                           
   489                           ;psect for function _main
   490  071B                     _main:	
   491                           
   492                           ;CS5_Group16.c: 332: initAtoD_PWM();
   493                           
   494                           ;incstack = 0
   495                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   496  071B  118A  2761  118A   	fcall	_initAtoD_PWM
   497                           
   498                           ;CS5_Group16.c: 333: initPort();
   499  071E  118A  264D  118A   	fcall	_initPort
   500                           
   501                           ;CS5_Group16.c: 334: indexMotor();
   502  0721  118A  273E  118A   	fcall	_indexMotor
   503  0724                     l180:	
   504                           ;CS5_Group16.c: 342: while(1 != 2)
   505                           
   506                           
   507                           ;CS5_Group16.c: 343: {
   508                           ;CS5_Group16.c: 344: if(blackButton == 1)
   509  0724  1283               	bcf	3,5	;RP0=0, select bank0
   510  0725  1303               	bcf	3,6	;RP1=0, select bank0
   511  0726  1E05               	btfss	5,4
   512  0727  2F24               	goto	l180
   513  0728                     l182:	
   514                           ;CS5_Group16.c: 345: {
   515                           ;CS5_Group16.c: 346: while(blackButton == 1){}
   516                           
   517  0728  1A05               	btfsc	5,4
   518  0729  2F28               	goto	l182
   519                           
   520                           ;CS5_Group16.c: 347: SwitchDelay();
   521  072A  118A  279A  118A   	fcall	_SwitchDelay
   522                           
   523                           ;CS5_Group16.c: 349: if(RC4 == 1 && RC5 == 1)
   524  072D  1283               	bcf	3,5	;RP0=0, select bank0
   525  072E  1303               	bcf	3,6	;RP1=0, select bank0
   526  072F  1A07               	btfsc	7,4	;volatile
   527  0730  1E87               	btfss	7,5	;volatile
   528  0731  2F35               	goto	l1837
   529                           
   530                           ;CS5_Group16.c: 350: {
   531                           ;CS5_Group16.c: 351: Mode0();
   532  0732  118A  252A  118A   	fcall	_Mode0
   533  0735                     l1837:	
   534                           
   535                           ;CS5_Group16.c: 352: }
   536                           ;CS5_Group16.c: 353: if(RC4 == 0 && RC5 == 0)
   537  0735  1283               	bcf	3,5	;RP0=0, select bank0
   538  0736  1303               	bcf	3,6	;RP1=0, select bank0
   539  0737  1E07               	btfss	7,4	;volatile
   540  0738  1A87               	btfsc	7,5	;volatile
   541  0739  2F24               	goto	l180
   542                           
   543                           ;CS5_Group16.c: 354: {
   544                           ;CS5_Group16.c: 355: Mode3();
   545  073A  118A  24C1  118A   	fcall	_Mode3
   546  073D  2F24               	goto	l180
   547  073E                     __end_of_main:	
   548                           
   549                           	psect	text1
   550  064D                     __ptext1:	
   551 ;; *************** function _initPort *****************
   552 ;; Defined at:
   553 ;;		line 92 in file "C:\Users\Robert Kydd\Documents\Personal\HW\Mechatronics\CS5 V2\CS5_Group16.c"
   554 ;; Parameters:    Size  Location     Type
   555 ;;		None
   556 ;; Auto vars:     Size  Location     Type
   557 ;;		None
   558 ;; Return value:  Size  Location     Type
   559 ;;		None               void
   560 ;; Registers used:
   561 ;;		wreg, status,2
   562 ;; Tracked objects:
   563 ;;		On entry : 0/0
   564 ;;		On exit  : 0/0
   565 ;;		Unchanged: 0/0
   566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   567 ;;      Params:         0       0       0       0       0
   568 ;;      Locals:         0       0       0       0       0
   569 ;;      Temps:          0       0       0       0       0
   570 ;;      Totals:         0       0       0       0       0
   571 ;;Total ram usage:        0 bytes
   572 ;; Hardware stack levels used:    1
   573 ;; Hardware stack levels required when called:    2
   574 ;; This function calls:
   575 ;;		Nothing
   576 ;; This function is called by:
   577 ;;		_main
   578 ;; This function uses a non-reentrant model
   579 ;;
   580                           
   581                           
   582                           ;psect for function _initPort
   583  064D                     _initPort:	
   584                           
   585                           ;CS5_Group16.c: 94: PORTB = 0B00000000;
   586                           
   587                           ;incstack = 0
   588                           ; Regs used in _initPort: [wreg+status,2]
   589  064D  1283               	bcf	3,5	;RP0=0, select bank0
   590  064E  1303               	bcf	3,6	;RP1=0, select bank0
   591  064F  0186               	clrf	6	;volatile
   592                           
   593                           ;CS5_Group16.c: 95: PORTC = 0B00000001;
   594  0650  3001               	movlw	1
   595  0651  0087               	movwf	7	;volatile
   596                           
   597                           ;CS5_Group16.c: 96: CCPR1L = 0B00000000;
   598  0652  0195               	clrf	21	;volatile
   599                           
   600                           ;CS5_Group16.c: 97: TRISA = 0B00111111;
   601  0653  303F               	movlw	63
   602  0654  1683               	bsf	3,5	;RP0=1, select bank1
   603  0655  1303               	bcf	3,6	;RP1=0, select bank1
   604  0656  0085               	movwf	5	;volatile
   605                           
   606                           ;CS5_Group16.c: 98: TRISB = 0B00000000;
   607  0657  0186               	clrf	6	;volatile
   608                           
   609                           ;CS5_Group16.c: 99: TRISC = 0B11111000;
   610  0658  30F8               	movlw	248
   611  0659  0087               	movwf	7	;volatile
   612                           
   613                           ;CS5_Group16.c: 101: i = 0;
   614  065A  01FB               	clrf	_i
   615  065B  01FC               	clrf	_i+1
   616                           
   617                           ;CS5_Group16.c: 102: State = 0;
   618  065C  01FD               	clrf	_State
   619                           
   620                           ;CS5_Group16.c: 103: duty = 0;
   621  065D  3000               	movlw	0
   622  065E  1283               	bcf	3,5	;RP0=0, select bank0
   623  065F  1303               	bcf	3,6	;RP1=0, select bank0
   624  0660  00E2               	movwf	_duty
   625  0661  3000               	movlw	0
   626  0662  00E3               	movwf	_duty+1
   627  0663  3000               	movlw	0
   628  0664  00E4               	movwf	_duty+2
   629                           
   630                           ;CS5_Group16.c: 104: Speed = 0;
   631  0665  01CE               	clrf	_Speed
   632  0666  01CF               	clrf	_Speed+1
   633                           
   634                           ;CS5_Group16.c: 105: aSpeed = 0;
   635  0667  01D0               	clrf	_aSpeed
   636  0668  01D1               	clrf	_aSpeed+1
   637                           
   638                           ;CS5_Group16.c: 106: Count = 0;
   639  0669  01F9               	clrf	_Count
   640  066A  01FA               	clrf	_Count+1
   641                           
   642                           ;CS5_Group16.c: 107: eCount = 0;
   643  066B  01D4               	clrf	_eCount
   644  066C  01D5               	clrf	_eCount+1
   645                           
   646                           ;CS5_Group16.c: 108: vRef = 165;
   647  066D  30A5               	movlw	165
   648  066E  00E7               	movwf	_vRef
   649  066F  3000               	movlw	0
   650  0670  00E8               	movwf	_vRef+1
   651                           
   652                           ;CS5_Group16.c: 109: baseVel = 0;
   653  0671  01D2               	clrf	_baseVel
   654  0672  01D3               	clrf	_baseVel+1
   655                           
   656                           ;CS5_Group16.c: 110: vError = 0;
   657  0673  01E5               	clrf	_vError
   658  0674  01E6               	clrf	_vError+1
   659                           
   660                           ;CS5_Group16.c: 111: vErrorDiff = 0;
   661  0675  01D8               	clrf	_vErrorDiff
   662  0676  01D9               	clrf	_vErrorDiff+1
   663                           
   664                           ;CS5_Group16.c: 112: vErrorInt = 0;
   665  0677  01DA               	clrf	_vErrorInt
   666  0678  01DB               	clrf	_vErrorInt+1
   667                           
   668                           ;CS5_Group16.c: 113: K_p = 10.0;
   669  0679  3000               	movlw	0
   670  067A  00DF               	movwf	_K_p
   671  067B  3020               	movlw	32
   672  067C  00E0               	movwf	_K_p+1
   673  067D  3041               	movlw	65
   674  067E  00E1               	movwf	_K_p+2
   675                           
   676                           ;CS5_Group16.c: 114: K_i = 0.5;
   677  067F  3000               	movlw	0
   678  0680  00DC               	movwf	_K_i
   679  0681  3000               	movlw	0
   680  0682  00DD               	movwf	_K_i+1
   681  0683  303F               	movlw	63
   682  0684  00DE               	movwf	_K_i+2
   683                           
   684                           ;CS5_Group16.c: 115: K_d = 0.125;
   685  0685  3000               	movlw	0
   686  0686  1683               	bsf	3,5	;RP0=1, select bank1
   687  0687  1303               	bcf	3,6	;RP1=0, select bank1
   688  0688  00A5               	movwf	_K_d^(0+128)
   689  0689  3000               	movlw	0
   690  068A  00A6               	movwf	(_K_d+1)^(0+128)
   691  068B  303E               	movlw	62
   692  068C  00A7               	movwf	(_K_d+2)^(0+128)
   693  068D  0008               	return
   694  068E                     __end_of_initPort:	
   695                           
   696                           	psect	text2
   697  0761                     __ptext2:	
   698 ;; *************** function _initAtoD_PWM *****************
   699 ;; Defined at:
   700 ;;		line 118 in file "C:\Users\Robert Kydd\Documents\Personal\HW\Mechatronics\CS5 V2\CS5_Group16.c"
   701 ;; Parameters:    Size  Location     Type
   702 ;;		None
   703 ;; Auto vars:     Size  Location     Type
   704 ;;		None
   705 ;; Return value:  Size  Location     Type
   706 ;;		None               void
   707 ;; Registers used:
   708 ;;		wreg
   709 ;; Tracked objects:
   710 ;;		On entry : 0/0
   711 ;;		On exit  : 0/0
   712 ;;		Unchanged: 0/0
   713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   714 ;;      Params:         0       0       0       0       0
   715 ;;      Locals:         0       0       0       0       0
   716 ;;      Temps:          0       0       0       0       0
   717 ;;      Totals:         0       0       0       0       0
   718 ;;Total ram usage:        0 bytes
   719 ;; Hardware stack levels used:    1
   720 ;; Hardware stack levels required when called:    2
   721 ;; This function calls:
   722 ;;		Nothing
   723 ;; This function is called by:
   724 ;;		_main
   725 ;; This function uses a non-reentrant model
   726 ;;
   727                           
   728                           
   729                           ;psect for function _initAtoD_PWM
   730  0761                     _initAtoD_PWM:	
   731                           
   732                           ;CS5_Group16.c: 121: ADIF = 0;
   733                           
   734                           ;incstack = 0
   735                           ; Regs used in _initAtoD_PWM: [wreg]
   736  0761  1283               	bcf	3,5	;RP0=0, select bank0
   737  0762  1303               	bcf	3,6	;RP1=0, select bank0
   738  0763  130C               	bcf	12,6	;volatile
   739                           
   740                           ;CS5_Group16.c: 122: ADIE = 1;
   741  0764  1683               	bsf	3,5	;RP0=1, select bank1
   742  0765  1303               	bcf	3,6	;RP1=0, select bank1
   743  0766  170C               	bsf	12,6	;volatile
   744                           
   745                           ;CS5_Group16.c: 123: PEIE = 1;
   746  0767  170B               	bsf	11,6	;volatile
   747                           
   748                           ;CS5_Group16.c: 124: GIE = 1;
   749  0768  178B               	bsf	11,7	;volatile
   750                           
   751                           ;CS5_Group16.c: 126: ADCON1 = 0B01011101;
   752  0769  305D               	movlw	93
   753  076A  009F               	movwf	31	;volatile
   754                           
   755                           ;CS5_Group16.c: 127: ADCON0 = 0B10001001;
   756  076B  3089               	movlw	137
   757  076C  1283               	bcf	3,5	;RP0=0, select bank0
   758  076D  1303               	bcf	3,6	;RP1=0, select bank0
   759  076E  009F               	movwf	31	;volatile
   760                           
   761                           ;CS5_Group16.c: 128: GO = 1;
   762  076F  151F               	bsf	31,2	;volatile
   763                           
   764                           ;CS5_Group16.c: 130: PR2 = 0B11111111;
   765  0770  30FF               	movlw	255
   766  0771  1683               	bsf	3,5	;RP0=1, select bank1
   767  0772  1303               	bcf	3,6	;RP1=0, select bank1
   768  0773  0092               	movwf	18	;volatile
   769                           
   770                           ;CS5_Group16.c: 131: T2CON = 0B00000100;
   771  0774  3004               	movlw	4
   772  0775  1283               	bcf	3,5	;RP0=0, select bank0
   773  0776  1303               	bcf	3,6	;RP1=0, select bank0
   774  0777  0092               	movwf	18	;volatile
   775                           
   776                           ;CS5_Group16.c: 132: CCP1CON = 0B00001100;
   777  0778  300C               	movlw	12
   778  0779  0097               	movwf	23	;volatile
   779  077A  0008               	return
   780  077B                     __end_of_initAtoD_PWM:	
   781                           
   782                           	psect	text3
   783  073E                     __ptext3:	
   784 ;; *************** function _indexMotor *****************
   785 ;; Defined at:
   786 ;;		line 207 in file "C:\Users\Robert Kydd\Documents\Personal\HW\Mechatronics\CS5 V2\CS5_Group16.c"
   787 ;; Parameters:    Size  Location     Type
   788 ;;		None
   789 ;; Auto vars:     Size  Location     Type
   790 ;;		None
   791 ;; Return value:  Size  Location     Type
   792 ;;		None               void
   793 ;; Registers used:
   794 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   795 ;; Tracked objects:
   796 ;;		On entry : 0/0
   797 ;;		On exit  : 0/0
   798 ;;		Unchanged: 0/0
   799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   800 ;;      Params:         0       0       0       0       0
   801 ;;      Locals:         0       0       0       0       0
   802 ;;      Temps:          0       0       0       0       0
   803 ;;      Totals:         0       0       0       0       0
   804 ;;Total ram usage:        0 bytes
   805 ;; Hardware stack levels used:    1
   806 ;; Hardware stack levels required when called:    5
   807 ;; This function calls:
   808 ;;		_PControl
   809 ;; This function is called by:
   810 ;;		_main
   811 ;; This function uses a non-reentrant model
   812 ;;
   813                           
   814                           
   815                           ;psect for function _indexMotor
   816  073E                     _indexMotor:	
   817  073E                     l1755:	
   818                           ;CS5_Group16.c: 209: while(eCount < 4)
   819                           
   820                           ;incstack = 0
   821                           ; Regs used in _indexMotor: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   822                           
   823  073E  1283               	bcf	3,5	;RP0=0, select bank0
   824  073F  1303               	bcf	3,6	;RP1=0, select bank0
   825  0740  0855               	movf	_eCount+1,w
   826  0741  3A80               	xorlw	128
   827  0742  00FF               	movwf	127
   828  0743  3080               	movlw	128
   829  0744  027F               	subwf	127,w
   830  0745  1D03               	skipz
   831  0746  2F49               	goto	u2635
   832  0747  3004               	movlw	4
   833  0748  0254               	subwf	_eCount,w
   834  0749                     u2635:	
   835  0749  1803               	btfsc	3,0
   836  074A  2F5D               	goto	l1757
   837                           
   838                           ;CS5_Group16.c: 210: {
   839                           ;CS5_Group16.c: 211: PControl();
   840  074B  118A  23E6  118A   	fcall	_PControl
   841                           
   842                           ;CS5_Group16.c: 212: if(eddySensor == 1)
   843  074E  1283               	bcf	3,5	;RP0=0, select bank0
   844  074F  1303               	bcf	3,6	;RP1=0, select bank0
   845  0750  1D87               	btfss	7,3
   846  0751  2F3E               	goto	l1755
   847  0752                     l128:	
   848                           ;CS5_Group16.c: 213: {
   849                           ;CS5_Group16.c: 214: while(eddySensor == 1){}
   850                           
   851  0752  1987               	btfsc	7,3
   852  0753  2F52               	goto	l128
   853                           
   854                           ;CS5_Group16.c: 215: eCount = eCount + 1;
   855  0754  0854               	movf	_eCount,w
   856  0755  3E01               	addlw	1
   857  0756  00D4               	movwf	_eCount
   858  0757  0855               	movf	_eCount+1,w
   859  0758  1803               	skipnc
   860  0759  3E01               	addlw	1
   861  075A  3E00               	addlw	0
   862  075B  00D5               	movwf	_eCount+1
   863  075C  2F3E               	goto	l1755
   864  075D                     l1757:	
   865                           
   866                           ;CS5_Group16.c: 216: }
   867                           ;CS5_Group16.c: 217: }
   868                           ;CS5_Group16.c: 219: CCPR1L = 0;
   869  075D  1283               	bcf	3,5	;RP0=0, select bank0
   870  075E  1303               	bcf	3,6	;RP1=0, select bank0
   871  075F  0195               	clrf	21	;volatile
   872  0760  0008               	return
   873  0761                     __end_of_indexMotor:	
   874                           
   875                           	psect	text4
   876  079A                     __ptext4:	
   877 ;; *************** function _SwitchDelay *****************
   878 ;; Defined at:
   879 ;;		line 82 in file "C:\Users\Robert Kydd\Documents\Personal\HW\Mechatronics\CS5 V2\CS5_Group16.c"
   880 ;; Parameters:    Size  Location     Type
   881 ;;		None
   882 ;; Auto vars:     Size  Location     Type
   883 ;;		None
   884 ;; Return value:  Size  Location     Type
   885 ;;		None               void
   886 ;; Registers used:
   887 ;;		wreg
   888 ;; Tracked objects:
   889 ;;		On entry : 0/0
   890 ;;		On exit  : 0/0
   891 ;;		Unchanged: 0/0
   892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   893 ;;      Params:         0       0       0       0       0
   894 ;;      Locals:         0       0       0       0       0
   895 ;;      Temps:          0       2       0       0       0
   896 ;;      Totals:         0       2       0       0       0
   897 ;;Total ram usage:        2 bytes
   898 ;; Hardware stack levels used:    1
   899 ;; Hardware stack levels required when called:    2
   900 ;; This function calls:
   901 ;;		Nothing
   902 ;; This function is called by:
   903 ;;		_main
   904 ;; This function uses a non-reentrant model
   905 ;;
   906                           
   907                           
   908                           ;psect for function _SwitchDelay
   909  079A                     _SwitchDelay:	
   910                           
   911                           ;CS5_Group16.c: 84: _delay((unsigned long)((1200)*(20000000/4000000.0)));
   912                           
   913                           ;incstack = 0
   914                           ; Regs used in _SwitchDelay: [wreg]
   915  079A  3008               	movlw	8
   916  079B  1283               	bcf	3,5	;RP0=0, select bank0
   917  079C  1303               	bcf	3,6	;RP1=0, select bank0
   918  079D  00A7               	movwf	??_SwitchDelay+1
   919  079E  30C9               	movlw	201
   920  079F  00A6               	movwf	??_SwitchDelay
   921  07A0                     u2807:	
   922  07A0  0BA6               	decfsz	??_SwitchDelay,f
   923  07A1  2FA0               	goto	u2807
   924  07A2  0BA7               	decfsz	??_SwitchDelay+1,f
   925  07A3  2FA0               	goto	u2807
   926  07A4  2FA5               	nop2
   927  07A5  0008               	return
   928  07A6                     __end_of_SwitchDelay:	
   929                           
   930                           	psect	text5
   931  04C1                     __ptext5:	
   932 ;; *************** function _Mode3 *****************
   933 ;; Defined at:
   934 ;;		line 282 in file "C:\Users\Robert Kydd\Documents\Personal\HW\Mechatronics\CS5 V2\CS5_Group16.c"
   935 ;; Parameters:    Size  Location     Type
   936 ;;		None
   937 ;; Auto vars:     Size  Location     Type
   938 ;;		None
   939 ;; Return value:  Size  Location     Type
   940 ;;		None               void
   941 ;; Registers used:
   942 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   943 ;; Tracked objects:
   944 ;;		On entry : 0/0
   945 ;;		On exit  : 0/0
   946 ;;		Unchanged: 0/0
   947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   948 ;;      Params:         0       0       0       0       0
   949 ;;      Locals:         0       0       0       0       0
   950 ;;      Temps:          0       0       0       0       0
   951 ;;      Totals:         0       0       0       0       0
   952 ;;Total ram usage:        0 bytes
   953 ;; Hardware stack levels used:    1
   954 ;; Hardware stack levels required when called:    5
   955 ;; This function calls:
   956 ;;		_PIDControl
   957 ;;		_brakeFlash
   958 ;;		_countUp
   959 ;; This function is called by:
   960 ;;		_main
   961 ;; This function uses a non-reentrant model
   962 ;;
   963                           
   964                           
   965                           ;psect for function _Mode3
   966  04C1                     _Mode3:	
   967                           
   968                           ;CS5_Group16.c: 284: CCPR1L = vRef;
   969                           
   970                           ;incstack = 0
   971                           ; Regs used in _Mode3: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   972  04C1  1283               	bcf	3,5	;RP0=0, select bank0
   973  04C2  1303               	bcf	3,6	;RP1=0, select bank0
   974  04C3  0867               	movf	_vRef,w
   975  04C4  0095               	movwf	21	;volatile
   976  04C5                     l1795:	
   977                           ;CS5_Group16.c: 287: {
   978                           ;CS5_Group16.c: 288: while(enCount < 100)
   979                           
   980                           ;CS5_Group16.c: 286: while(1 != 2)
   981                           
   982  04C5  1283               	bcf	3,5	;RP0=0, select bank0
   983  04C6  1303               	bcf	3,6	;RP1=0, select bank0
   984  04C7  0857               	movf	_enCount+1,w
   985  04C8  3A80               	xorlw	128
   986  04C9  00FF               	movwf	127
   987  04CA  3080               	movlw	128
   988  04CB  027F               	subwf	127,w
   989  04CC  1D03               	skipz
   990  04CD  2CD0               	goto	u2695
   991  04CE  3064               	movlw	100
   992  04CF  0256               	subwf	_enCount,w
   993  04D0                     u2695:	
   994  04D0  1803               	btfsc	3,0
   995  04D1  2CD9               	goto	l1797
   996                           
   997                           ;CS5_Group16.c: 289: {
   998                           ;CS5_Group16.c: 290: countUp();
   999  04D2  118A  278B  118A   	fcall	_countUp
  1000                           
  1001                           ;CS5_Group16.c: 291: PIDControl();
  1002  04D5  118A  216C  118A   	fcall	_PIDControl
  1003  04D8  2CC5               	goto	l1795
  1004  04D9                     l1797:	
  1005                           
  1006                           ;CS5_Group16.c: 292: }
  1007                           ;CS5_Group16.c: 293: enCount = 0;
  1008  04D9  1283               	bcf	3,5	;RP0=0, select bank0
  1009  04DA  1303               	bcf	3,6	;RP1=0, select bank0
  1010  04DB  01D6               	clrf	_enCount
  1011  04DC  01D7               	clrf	_enCount+1
  1012                           
  1013                           ;CS5_Group16.c: 294: vRef = vRef + 1;
  1014  04DD  0867               	movf	_vRef,w
  1015  04DE  3E01               	addlw	1
  1016  04DF  00E7               	movwf	_vRef
  1017  04E0  0868               	movf	_vRef+1,w
  1018  04E1  1803               	skipnc
  1019  04E2  3E01               	addlw	1
  1020  04E3  3E00               	addlw	0
  1021  04E4  00E8               	movwf	_vRef+1
  1022                           
  1023                           ;CS5_Group16.c: 296: if(vRef == 190)
  1024  04E5  30BE               	movlw	190
  1025  04E6  0667               	xorwf	_vRef,w
  1026  04E7  0468               	iorwf	_vRef+1,w
  1027  04E8  1903               	btfsc	3,2
  1028  04E9  2CF1               	goto	l1807
  1029  04EA  2CC5               	goto	l1795
  1030  04EB                     l1805:	
  1031                           ;CS5_Group16.c: 297: {
  1032                           ;CS5_Group16.c: 298: while(enCount < 6000)
  1033                           
  1034                           
  1035                           ;CS5_Group16.c: 299: {
  1036                           ;CS5_Group16.c: 300: countUp();
  1037  04EB  118A  278B  118A   	fcall	_countUp
  1038                           
  1039                           ;CS5_Group16.c: 301: PIDControl();
  1040  04EE  118A  216C  118A   	fcall	_PIDControl
  1041  04F1                     l1807:	
  1042  04F1  1283               	bcf	3,5	;RP0=0, select bank0
  1043  04F2  1303               	bcf	3,6	;RP1=0, select bank0
  1044  04F3  0857               	movf	_enCount+1,w
  1045  04F4  3A80               	xorlw	128
  1046  04F5  00FF               	movwf	127
  1047  04F6  3097               	movlw	151
  1048  04F7  027F               	subwf	127,w
  1049  04F8  1D03               	skipz
  1050  04F9  2CFC               	goto	u2715
  1051  04FA  3070               	movlw	112
  1052  04FB  0256               	subwf	_enCount,w
  1053  04FC                     u2715:	
  1054  04FC  1C03               	skipc
  1055  04FD  2CEB               	goto	l1805
  1056                           
  1057                           ;CS5_Group16.c: 302: }
  1058                           ;CS5_Group16.c: 303: enCount = 0;
  1059  04FE  1283               	bcf	3,5	;RP0=0, select bank0
  1060  04FF  1303               	bcf	3,6	;RP1=0, select bank0
  1061  0500  01D6               	clrf	_enCount
  1062  0501  01D7               	clrf	_enCount+1
  1063  0502                     l1813:	
  1064                           ;CS5_Group16.c: 304: break;
  1065                           
  1066  0502  1283               	bcf	3,5	;RP0=0, select bank0
  1067  0503  1303               	bcf	3,6	;RP1=0, select bank0
  1068  0504  0857               	movf	_enCount+1,w
  1069  0505  3A80               	xorlw	128
  1070  0506  00FF               	movwf	127
  1071  0507  3080               	movlw	128
  1072  0508  027F               	subwf	127,w
  1073  0509  1D03               	skipz
  1074  050A  2D0D               	goto	u2725
  1075  050B  3064               	movlw	100
  1076  050C  0256               	subwf	_enCount,w
  1077  050D                     u2725:	
  1078  050D  1803               	btfsc	3,0
  1079  050E  2D16               	goto	l1815
  1080                           
  1081                           ;CS5_Group16.c: 310: {
  1082                           ;CS5_Group16.c: 311: countUp();
  1083                           
  1084                           ;CS5_Group16.c: 308: {
  1085                           ;CS5_Group16.c: 309: while(enCount < 100)
  1086                           
  1087                           ;CS5_Group16.c: 305: }
  1088                           ;CS5_Group16.c: 306: }
  1089                           ;CS5_Group16.c: 307: while(1 != 2)
  1090  050F  118A  278B  118A   	fcall	_countUp
  1091                           
  1092                           ;CS5_Group16.c: 312: PIDControl();
  1093  0512  118A  216C  118A   	fcall	_PIDControl
  1094  0515  2D02               	goto	l1813
  1095  0516                     l1815:	
  1096                           
  1097                           ;CS5_Group16.c: 313: }
  1098                           ;CS5_Group16.c: 314: enCount = 0;
  1099  0516  1283               	bcf	3,5	;RP0=0, select bank0
  1100  0517  1303               	bcf	3,6	;RP1=0, select bank0
  1101  0518  01D6               	clrf	_enCount
  1102  0519  01D7               	clrf	_enCount+1
  1103                           
  1104                           ;CS5_Group16.c: 315: vRef = vRef - 1;
  1105  051A  0867               	movf	_vRef,w
  1106  051B  3EFF               	addlw	255
  1107  051C  00E7               	movwf	_vRef
  1108  051D  0868               	movf	_vRef+1,w
  1109  051E  1803               	skipnc
  1110  051F  3E01               	addlw	1
  1111  0520  3EFF               	addlw	255
  1112  0521  00E8               	movwf	_vRef+1
  1113                           
  1114                           ;CS5_Group16.c: 317: if(aSpeed == 140)
  1115  0522  308C               	movlw	140
  1116  0523  0650               	xorwf	_aSpeed,w
  1117  0524  0451               	iorwf	_aSpeed+1,w
  1118  0525  1D03               	skipz
  1119  0526  2D02               	goto	l1813
  1120                           
  1121                           ;CS5_Group16.c: 318: {
  1122                           ;CS5_Group16.c: 319: brakeFlash();
  1123  0527  118A  26CC         	fcall	_brakeFlash
  1124                           
  1125                           ;CS5_Group16.c: 320: break;
  1126  0529  0008               	return
  1127  052A                     __end_of_Mode3:	
  1128                           
  1129                           	psect	text6
  1130  016C                     __ptext6:	
  1131 ;; *************** function _PIDControl *****************
  1132 ;; Defined at:
  1133 ;;		line 181 in file "C:\Users\Robert Kydd\Documents\Personal\HW\Mechatronics\CS5 V2\CS5_Group16.c"
  1134 ;; Parameters:    Size  Location     Type
  1135 ;;		None
  1136 ;; Auto vars:     Size  Location     Type
  1137 ;;		None
  1138 ;; Return value:  Size  Location     Type
  1139 ;;		None               void
  1140 ;; Registers used:
  1141 ;;		wreg, status,2, status,0, pclath, cstack
  1142 ;; Tracked objects:
  1143 ;;		On entry : 0/0
  1144 ;;		On exit  : 0/0
  1145 ;;		Unchanged: 0/0
  1146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1147 ;;      Params:         0       0       0       0       0
  1148 ;;      Locals:         0       0       0       0       0
  1149 ;;      Temps:          0       0       2       0       0
  1150 ;;      Totals:         0       0       2       0       0
  1151 ;;Total ram usage:        2 bytes
  1152 ;; Hardware stack levels used:    1
  1153 ;; Hardware stack levels required when called:    4
  1154 ;; This function calls:
  1155 ;;		___awtoft
  1156 ;;		___ftadd
  1157 ;;		___ftge
  1158 ;;		___ftmul
  1159 ;;		___fttol
  1160 ;; This function is called by:
  1161 ;;		_Mode3
  1162 ;; This function uses a non-reentrant model
  1163 ;;
  1164                           
  1165                           
  1166                           ;psect for function _PIDControl
  1167  016C                     _PIDControl:	
  1168                           
  1169                           ;CS5_Group16.c: 183: vError = vRef - aSpeed;
  1170                           
  1171                           ;incstack = 0
  1172                           ; Regs used in _PIDControl: [wreg+status,2+status,0+pclath+cstack]
  1173  016C  1283               	bcf	3,5	;RP0=0, select bank0
  1174  016D  1303               	bcf	3,6	;RP1=0, select bank0
  1175  016E  0950               	comf	_aSpeed,w
  1176  016F  1683               	bsf	3,5	;RP0=1, select bank1
  1177  0170  1303               	bcf	3,6	;RP1=0, select bank1
  1178  0171  00A3               	movwf	??_PIDControl^(0+128)
  1179  0172  1283               	bcf	3,5	;RP0=0, select bank0
  1180  0173  1303               	bcf	3,6	;RP1=0, select bank0
  1181  0174  0951               	comf	_aSpeed+1,w
  1182  0175  1683               	bsf	3,5	;RP0=1, select bank1
  1183  0176  1303               	bcf	3,6	;RP1=0, select bank1
  1184  0177  00A4               	movwf	(??_PIDControl^(0+128)+1)
  1185  0178  0AA3               	incf	??_PIDControl^(0+128),f
  1186  0179  1903               	skipnz
  1187  017A  0AA4               	incf	(??_PIDControl^(0+128)+1),f
  1188  017B  1283               	bcf	3,5	;RP0=0, select bank0
  1189  017C  1303               	bcf	3,6	;RP1=0, select bank0
  1190  017D  0867               	movf	_vRef,w
  1191  017E  1683               	bsf	3,5	;RP0=1, select bank1
  1192  017F  1303               	bcf	3,6	;RP1=0, select bank1
  1193  0180  0723               	addwf	??_PIDControl^(0+128),w
  1194  0181  1283               	bcf	3,5	;RP0=0, select bank0
  1195  0182  1303               	bcf	3,6	;RP1=0, select bank0
  1196  0183  00E5               	movwf	_vError
  1197  0184  0868               	movf	_vRef+1,w
  1198  0185  1803               	skipnc
  1199  0186  0A68               	incf	_vRef+1,w
  1200  0187  1683               	bsf	3,5	;RP0=1, select bank1
  1201  0188  1303               	bcf	3,6	;RP1=0, select bank1
  1202  0189  0724               	addwf	(??_PIDControl+1)^(0+128),w
  1203  018A  1283               	bcf	3,5	;RP0=0, select bank0
  1204  018B  1303               	bcf	3,6	;RP1=0, select bank0
  1205  018C  00E6               	movwf	_vError+1
  1206                           
  1207                           ;CS5_Group16.c: 184: vErrorDiff = vError - vErrorDiff;
  1208  018D  0958               	comf	_vErrorDiff,w
  1209  018E  1683               	bsf	3,5	;RP0=1, select bank1
  1210  018F  1303               	bcf	3,6	;RP1=0, select bank1
  1211  0190  00A3               	movwf	??_PIDControl^(0+128)
  1212  0191  1283               	bcf	3,5	;RP0=0, select bank0
  1213  0192  1303               	bcf	3,6	;RP1=0, select bank0
  1214  0193  0959               	comf	_vErrorDiff+1,w
  1215  0194  1683               	bsf	3,5	;RP0=1, select bank1
  1216  0195  1303               	bcf	3,6	;RP1=0, select bank1
  1217  0196  00A4               	movwf	(??_PIDControl^(0+128)+1)
  1218  0197  0AA3               	incf	??_PIDControl^(0+128),f
  1219  0198  1903               	skipnz
  1220  0199  0AA4               	incf	(??_PIDControl^(0+128)+1),f
  1221  019A  1283               	bcf	3,5	;RP0=0, select bank0
  1222  019B  1303               	bcf	3,6	;RP1=0, select bank0
  1223  019C  0865               	movf	_vError,w
  1224  019D  1683               	bsf	3,5	;RP0=1, select bank1
  1225  019E  1303               	bcf	3,6	;RP1=0, select bank1
  1226  019F  0723               	addwf	??_PIDControl^(0+128),w
  1227  01A0  1283               	bcf	3,5	;RP0=0, select bank0
  1228  01A1  1303               	bcf	3,6	;RP1=0, select bank0
  1229  01A2  00D8               	movwf	_vErrorDiff
  1230  01A3  0866               	movf	_vError+1,w
  1231  01A4  1803               	skipnc
  1232  01A5  0A66               	incf	_vError+1,w
  1233  01A6  1683               	bsf	3,5	;RP0=1, select bank1
  1234  01A7  1303               	bcf	3,6	;RP1=0, select bank1
  1235  01A8  0724               	addwf	(??_PIDControl+1)^(0+128),w
  1236  01A9  1283               	bcf	3,5	;RP0=0, select bank0
  1237  01AA  1303               	bcf	3,6	;RP1=0, select bank0
  1238  01AB  00D9               	movwf	_vErrorDiff+1
  1239                           
  1240                           ;CS5_Group16.c: 185: vErrorInt = vErrorInt + vError;
  1241  01AC  0865               	movf	_vError,w
  1242  01AD  075A               	addwf	_vErrorInt,w
  1243  01AE  00DA               	movwf	_vErrorInt
  1244  01AF  0866               	movf	_vError+1,w
  1245  01B0  1803               	skipnc
  1246  01B1  0A66               	incf	_vError+1,w
  1247  01B2  075B               	addwf	_vErrorInt+1,w
  1248  01B3  00DB               	movwf	_vErrorInt+1
  1249                           
  1250                           ;CS5_Group16.c: 187: PORTB = vError;
  1251  01B4  0865               	movf	_vError,w
  1252  01B5  0086               	movwf	6	;volatile
  1253                           
  1254                           ;CS5_Group16.c: 189: duty = K_p * vError;
  1255  01B6  085F               	movf	_K_p,w
  1256  01B7  00B4               	movwf	___ftmul@f1
  1257  01B8  0860               	movf	_K_p+1,w
  1258  01B9  00B5               	movwf	___ftmul@f1+1
  1259  01BA  0861               	movf	_K_p+2,w
  1260  01BB  00B6               	movwf	___ftmul@f1+2
  1261  01BC  0866               	movf	_vError+1,w
  1262  01BD  01AF               	clrf	___awtoft@c+1
  1263  01BE  07AF               	addwf	___awtoft@c+1,f
  1264  01BF  0865               	movf	_vError,w
  1265  01C0  01AE               	clrf	___awtoft@c
  1266  01C1  07AE               	addwf	___awtoft@c,f
  1267  01C2  118A  26F7  118A   	fcall	___awtoft
  1268  01C5  1283               	bcf	3,5	;RP0=0, select bank0
  1269  01C6  1303               	bcf	3,6	;RP1=0, select bank0
  1270  01C7  082E               	movf	?___awtoft,w
  1271  01C8  00B7               	movwf	___ftmul@f2
  1272  01C9  082F               	movf	?___awtoft+1,w
  1273  01CA  00B8               	movwf	___ftmul@f2+1
  1274  01CB  0830               	movf	?___awtoft+2,w
  1275  01CC  00B9               	movwf	___ftmul@f2+2
  1276  01CD  118A  2286  118A   	fcall	___ftmul
  1277  01D0  1283               	bcf	3,5	;RP0=0, select bank0
  1278  01D1  1303               	bcf	3,6	;RP1=0, select bank0
  1279  01D2  0834               	movf	?___ftmul,w
  1280  01D3  00E2               	movwf	_duty
  1281  01D4  0835               	movf	?___ftmul+1,w
  1282  01D5  00E3               	movwf	_duty+1
  1283  01D6  0836               	movf	?___ftmul+2,w
  1284  01D7  00E4               	movwf	_duty+2
  1285                           
  1286                           ;CS5_Group16.c: 190: duty = duty + K_d * vErrorDiff;
  1287  01D8  0862               	movf	_duty,w
  1288  01D9  00C4               	movwf	___ftadd@f1
  1289  01DA  0863               	movf	_duty+1,w
  1290  01DB  00C5               	movwf	___ftadd@f1+1
  1291  01DC  0864               	movf	_duty+2,w
  1292  01DD  00C6               	movwf	___ftadd@f1+2
  1293  01DE  1683               	bsf	3,5	;RP0=1, select bank1
  1294  01DF  1303               	bcf	3,6	;RP1=0, select bank1
  1295  01E0  0825               	movf	_K_d^(0+128),w
  1296  01E1  1283               	bcf	3,5	;RP0=0, select bank0
  1297  01E2  1303               	bcf	3,6	;RP1=0, select bank0
  1298  01E3  00B4               	movwf	___ftmul@f1
  1299  01E4  1683               	bsf	3,5	;RP0=1, select bank1
  1300  01E5  1303               	bcf	3,6	;RP1=0, select bank1
  1301  01E6  0826               	movf	(_K_d+1)^(0+128),w
  1302  01E7  1283               	bcf	3,5	;RP0=0, select bank0
  1303  01E8  1303               	bcf	3,6	;RP1=0, select bank0
  1304  01E9  00B5               	movwf	___ftmul@f1+1
  1305  01EA  1683               	bsf	3,5	;RP0=1, select bank1
  1306  01EB  1303               	bcf	3,6	;RP1=0, select bank1
  1307  01EC  0827               	movf	(_K_d+2)^(0+128),w
  1308  01ED  1283               	bcf	3,5	;RP0=0, select bank0
  1309  01EE  1303               	bcf	3,6	;RP1=0, select bank0
  1310  01EF  00B6               	movwf	___ftmul@f1+2
  1311  01F0  0859               	movf	_vErrorDiff+1,w
  1312  01F1  01AF               	clrf	___awtoft@c+1
  1313  01F2  07AF               	addwf	___awtoft@c+1,f
  1314  01F3  0858               	movf	_vErrorDiff,w
  1315  01F4  01AE               	clrf	___awtoft@c
  1316  01F5  07AE               	addwf	___awtoft@c,f
  1317  01F6  118A  26F7  118A   	fcall	___awtoft
  1318  01F9  1283               	bcf	3,5	;RP0=0, select bank0
  1319  01FA  1303               	bcf	3,6	;RP1=0, select bank0
  1320  01FB  082E               	movf	?___awtoft,w
  1321  01FC  00B7               	movwf	___ftmul@f2
  1322  01FD  082F               	movf	?___awtoft+1,w
  1323  01FE  00B8               	movwf	___ftmul@f2+1
  1324  01FF  0830               	movf	?___awtoft+2,w
  1325  0200  00B9               	movwf	___ftmul@f2+2
  1326  0201  118A  2286  118A   	fcall	___ftmul
  1327  0204  1283               	bcf	3,5	;RP0=0, select bank0
  1328  0205  1303               	bcf	3,6	;RP1=0, select bank0
  1329  0206  0834               	movf	?___ftmul,w
  1330  0207  00C7               	movwf	___ftadd@f2
  1331  0208  0835               	movf	?___ftmul+1,w
  1332  0209  00C8               	movwf	___ftadd@f2+1
  1333  020A  0836               	movf	?___ftmul+2,w
  1334  020B  00C9               	movwf	___ftadd@f2+2
  1335  020C  118A  2021  118A   	fcall	___ftadd
  1336  020F  1283               	bcf	3,5	;RP0=0, select bank0
  1337  0210  1303               	bcf	3,6	;RP1=0, select bank0
  1338  0211  0844               	movf	?___ftadd,w
  1339  0212  00E2               	movwf	_duty
  1340  0213  0845               	movf	?___ftadd+1,w
  1341  0214  00E3               	movwf	_duty+1
  1342  0215  0846               	movf	?___ftadd+2,w
  1343  0216  00E4               	movwf	_duty+2
  1344                           
  1345                           ;CS5_Group16.c: 191: duty = duty + K_i * vErrorInt;
  1346  0217  0862               	movf	_duty,w
  1347  0218  00C4               	movwf	___ftadd@f1
  1348  0219  0863               	movf	_duty+1,w
  1349  021A  00C5               	movwf	___ftadd@f1+1
  1350  021B  0864               	movf	_duty+2,w
  1351  021C  00C6               	movwf	___ftadd@f1+2
  1352  021D  085C               	movf	_K_i,w
  1353  021E  00B4               	movwf	___ftmul@f1
  1354  021F  085D               	movf	_K_i+1,w
  1355  0220  00B5               	movwf	___ftmul@f1+1
  1356  0221  085E               	movf	_K_i+2,w
  1357  0222  00B6               	movwf	___ftmul@f1+2
  1358  0223  085B               	movf	_vErrorInt+1,w
  1359  0224  01AF               	clrf	___awtoft@c+1
  1360  0225  07AF               	addwf	___awtoft@c+1,f
  1361  0226  085A               	movf	_vErrorInt,w
  1362  0227  01AE               	clrf	___awtoft@c
  1363  0228  07AE               	addwf	___awtoft@c,f
  1364  0229  118A  26F7  118A   	fcall	___awtoft
  1365  022C  1283               	bcf	3,5	;RP0=0, select bank0
  1366  022D  1303               	bcf	3,6	;RP1=0, select bank0
  1367  022E  082E               	movf	?___awtoft,w
  1368  022F  00B7               	movwf	___ftmul@f2
  1369  0230  082F               	movf	?___awtoft+1,w
  1370  0231  00B8               	movwf	___ftmul@f2+1
  1371  0232  0830               	movf	?___awtoft+2,w
  1372  0233  00B9               	movwf	___ftmul@f2+2
  1373  0234  118A  2286  118A   	fcall	___ftmul
  1374  0237  1283               	bcf	3,5	;RP0=0, select bank0
  1375  0238  1303               	bcf	3,6	;RP1=0, select bank0
  1376  0239  0834               	movf	?___ftmul,w
  1377  023A  00C7               	movwf	___ftadd@f2
  1378  023B  0835               	movf	?___ftmul+1,w
  1379  023C  00C8               	movwf	___ftadd@f2+1
  1380  023D  0836               	movf	?___ftmul+2,w
  1381  023E  00C9               	movwf	___ftadd@f2+2
  1382  023F  118A  2021  118A   	fcall	___ftadd
  1383  0242  1283               	bcf	3,5	;RP0=0, select bank0
  1384  0243  1303               	bcf	3,6	;RP1=0, select bank0
  1385  0244  0844               	movf	?___ftadd,w
  1386  0245  00E2               	movwf	_duty
  1387  0246  0845               	movf	?___ftadd+1,w
  1388  0247  00E3               	movwf	_duty+1
  1389  0248  0846               	movf	?___ftadd+2,w
  1390  0249  00E4               	movwf	_duty+2
  1391                           
  1392                           ;CS5_Group16.c: 193: if(duty > 255)
  1393  024A  3000               	movlw	0
  1394  024B  00A6               	movwf	___ftge@ff1
  1395  024C  307F               	movlw	127
  1396  024D  00A7               	movwf	___ftge@ff1+1
  1397  024E  3043               	movlw	67
  1398  024F  00A8               	movwf	___ftge@ff1+2
  1399  0250  0862               	movf	_duty,w
  1400  0251  00A9               	movwf	___ftge@ff2
  1401  0252  0863               	movf	_duty+1,w
  1402  0253  00AA               	movwf	___ftge@ff2+1
  1403  0254  0864               	movf	_duty+2,w
  1404  0255  00AB               	movwf	___ftge@ff2+2
  1405  0256  118A  2593  118A   	fcall	___ftge
  1406  0259  1803               	btfsc	3,0
  1407  025A  2A60               	goto	l1739
  1408                           
  1409                           ;CS5_Group16.c: 194: {
  1410                           ;CS5_Group16.c: 195: CCPR1L = 255;
  1411  025B  30FF               	movlw	255
  1412  025C  1283               	bcf	3,5	;RP0=0, select bank0
  1413  025D  1303               	bcf	3,6	;RP1=0, select bank0
  1414  025E  0095               	movwf	21	;volatile
  1415                           
  1416                           ;CS5_Group16.c: 196: }
  1417  025F  0008               	return
  1418  0260                     l1739:	
  1419                           
  1420                           ;CS5_Group16.c: 197: else if(duty < 0)
  1421  0260  1283               	bcf	3,5	;RP0=0, select bank0
  1422  0261  1303               	bcf	3,6	;RP1=0, select bank0
  1423  0262  0862               	movf	_duty,w
  1424  0263  00A6               	movwf	___ftge@ff1
  1425  0264  0863               	movf	_duty+1,w
  1426  0265  00A7               	movwf	___ftge@ff1+1
  1427  0266  0864               	movf	_duty+2,w
  1428  0267  00A8               	movwf	___ftge@ff1+2
  1429  0268  3000               	movlw	0
  1430  0269  00A9               	movwf	___ftge@ff2
  1431  026A  3000               	movlw	0
  1432  026B  00AA               	movwf	___ftge@ff2+1
  1433  026C  3000               	movlw	0
  1434  026D  00AB               	movwf	___ftge@ff2+2
  1435  026E  118A  2593  118A   	fcall	___ftge
  1436  0271  1803               	btfsc	3,0
  1437  0272  2A77               	goto	l1743
  1438                           
  1439                           ;CS5_Group16.c: 198: {
  1440                           ;CS5_Group16.c: 199: CCPR1L = 0;
  1441  0273  1283               	bcf	3,5	;RP0=0, select bank0
  1442  0274  1303               	bcf	3,6	;RP1=0, select bank0
  1443  0275  0195               	clrf	21	;volatile
  1444                           
  1445                           ;CS5_Group16.c: 200: }
  1446  0276  0008               	return
  1447  0277                     l1743:	
  1448                           
  1449                           ;CS5_Group16.c: 201: else
  1450                           ;CS5_Group16.c: 202: {
  1451                           ;CS5_Group16.c: 203: CCPR1L = duty;
  1452  0277  1283               	bcf	3,5	;RP0=0, select bank0
  1453  0278  1303               	bcf	3,6	;RP1=0, select bank0
  1454  0279  0862               	movf	_duty,w
  1455  027A  00A6               	movwf	___fttol@f1
  1456  027B  0863               	movf	_duty+1,w
  1457  027C  00A7               	movwf	___fttol@f1+1
  1458  027D  0864               	movf	_duty+2,w
  1459  027E  00A8               	movwf	___fttol@f1+2
  1460  027F  118A  2358         	fcall	___fttol
  1461  0281  1283               	bcf	3,5	;RP0=0, select bank0
  1462  0282  1303               	bcf	3,6	;RP1=0, select bank0
  1463  0283  0826               	movf	?___fttol,w
  1464  0284  0095               	movwf	21	;volatile
  1465  0285  0008               	return
  1466  0286                     __end_of_PIDControl:	
  1467                           
  1468                           	psect	text7
  1469  0021                     __ptext7:	
  1470 ;; *************** function ___ftadd *****************
  1471 ;; Defined at:
  1472 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftadd.c"
  1473 ;; Parameters:    Size  Location     Type
  1474 ;;  f1              3   36[BANK0 ] float 
  1475 ;;  f2              3   39[BANK0 ] float 
  1476 ;; Auto vars:     Size  Location     Type
  1477 ;;  exp1            1    2[BANK1 ] unsigned char 
  1478 ;;  exp2            1    1[BANK1 ] unsigned char 
  1479 ;;  sign            1    0[BANK1 ] unsigned char 
  1480 ;; Return value:  Size  Location     Type
  1481 ;;                  3   36[BANK0 ] float 
  1482 ;; Registers used:
  1483 ;;		wreg, status,2, status,0, pclath, cstack
  1484 ;; Tracked objects:
  1485 ;;		On entry : 0/0
  1486 ;;		On exit  : 0/0
  1487 ;;		Unchanged: 0/0
  1488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1489 ;;      Params:         0       6       0       0       0
  1490 ;;      Locals:         0       0       3       0       0
  1491 ;;      Temps:          0       4       0       0       0
  1492 ;;      Totals:         0      10       3       0       0
  1493 ;;Total ram usage:       13 bytes
  1494 ;; Hardware stack levels used:    1
  1495 ;; Hardware stack levels required when called:    3
  1496 ;; This function calls:
  1497 ;;		___ftpack
  1498 ;; This function is called by:
  1499 ;;		_PIDControl
  1500 ;; This function uses a non-reentrant model
  1501 ;;
  1502                           
  1503                           
  1504                           ;psect for function ___ftadd
  1505  0021                     ___ftadd:	
  1506                           
  1507                           ;incstack = 0
  1508                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  1509  0021  1283               	bcf	3,5	;RP0=0, select bank0
  1510  0022  1303               	bcf	3,6	;RP1=0, select bank0
  1511  0023  0844               	movf	___ftadd@f1,w
  1512  0024  00CA               	movwf	??___ftadd
  1513  0025  0845               	movf	___ftadd@f1+1,w
  1514  0026  00CB               	movwf	??___ftadd+1
  1515  0027  0846               	movf	___ftadd@f1+2,w
  1516  0028  00CC               	movwf	??___ftadd+2
  1517  0029  1003               	clrc
  1518  002A  0D4B               	rlf	??___ftadd+1,w
  1519  002B  0D4C               	rlf	??___ftadd+2,w
  1520  002C  00CD               	movwf	??___ftadd+3
  1521  002D  084D               	movf	??___ftadd+3,w
  1522  002E  1683               	bsf	3,5	;RP0=1, select bank1
  1523  002F  1303               	bcf	3,6	;RP1=0, select bank1
  1524  0030  00A2               	movwf	___ftadd@exp1^(0+128)
  1525  0031  1283               	bcf	3,5	;RP0=0, select bank0
  1526  0032  1303               	bcf	3,6	;RP1=0, select bank0
  1527  0033  0847               	movf	___ftadd@f2,w
  1528  0034  00CA               	movwf	??___ftadd
  1529  0035  0848               	movf	___ftadd@f2+1,w
  1530  0036  00CB               	movwf	??___ftadd+1
  1531  0037  0849               	movf	___ftadd@f2+2,w
  1532  0038  00CC               	movwf	??___ftadd+2
  1533  0039  1003               	clrc
  1534  003A  0D4B               	rlf	??___ftadd+1,w
  1535  003B  0D4C               	rlf	??___ftadd+2,w
  1536  003C  00CD               	movwf	??___ftadd+3
  1537  003D  084D               	movf	??___ftadd+3,w
  1538  003E  1683               	bsf	3,5	;RP0=1, select bank1
  1539  003F  1303               	bcf	3,6	;RP1=0, select bank1
  1540  0040  00A1               	movwf	___ftadd@exp2^(0+128)
  1541  0041  0822               	movf	___ftadd@exp1^(0+128),w
  1542  0042  1903               	btfsc	3,2
  1543  0043  2854               	goto	l1595
  1544  0044  0821               	movf	___ftadd@exp2^(0+128),w
  1545  0045  0222               	subwf	___ftadd@exp1^(0+128),w
  1546  0046  1803               	skipnc
  1547  0047  285C               	goto	l1599
  1548  0048  0322               	decf	___ftadd@exp1^(0+128),w
  1549  0049  3AFF               	xorlw	255
  1550  004A  0721               	addwf	___ftadd@exp2^(0+128),w
  1551  004B  1283               	bcf	3,5	;RP0=0, select bank0
  1552  004C  1303               	bcf	3,6	;RP1=0, select bank0
  1553  004D  00CA               	movwf	??___ftadd
  1554  004E  3019               	movlw	25
  1555  004F  024A               	subwf	??___ftadd,w
  1556  0050  1C03               	skipc
  1557  0051  285C               	goto	l1599
  1558  0052  1683               	bsf	3,5	;RP0=1, select bank1
  1559  0053  1303               	bcf	3,6	;RP1=0, select bank1
  1560  0054                     l1595:	
  1561  0054  1283               	bcf	3,5	;RP0=0, select bank0
  1562  0055  0847               	movf	___ftadd@f2,w
  1563  0056  00C4               	movwf	?___ftadd
  1564  0057  0848               	movf	___ftadd@f2+1,w
  1565  0058  00C5               	movwf	?___ftadd+1
  1566  0059  0849               	movf	___ftadd@f2+2,w
  1567  005A  00C6               	movwf	?___ftadd+2
  1568  005B  0008               	return
  1569  005C                     l1599:	
  1570  005C  1683               	bsf	3,5	;RP0=1, select bank1
  1571  005D  1303               	bcf	3,6	;RP1=0, select bank1
  1572  005E  0821               	movf	___ftadd@exp2^(0+128),w
  1573  005F  1903               	btfsc	3,2
  1574  0060  0008               	return
  1575  0061  0822               	movf	___ftadd@exp1^(0+128),w
  1576  0062  0221               	subwf	___ftadd@exp2^(0+128),w
  1577  0063  1803               	skipnc
  1578  0064  286F               	goto	l1605
  1579  0065  0321               	decf	___ftadd@exp2^(0+128),w
  1580  0066  3AFF               	xorlw	255
  1581  0067  0722               	addwf	___ftadd@exp1^(0+128),w
  1582  0068  1283               	bcf	3,5	;RP0=0, select bank0
  1583  0069  1303               	bcf	3,6	;RP1=0, select bank0
  1584  006A  00CA               	movwf	??___ftadd
  1585  006B  3019               	movlw	25
  1586  006C  024A               	subwf	??___ftadd,w
  1587  006D  1803               	btfsc	3,0
  1588  006E  0008               	return
  1589  006F                     l1605:	
  1590  006F  3006               	movlw	6
  1591  0070  1283               	bcf	3,5	;RP0=0, select bank0
  1592  0071  00CA               	movwf	??___ftadd
  1593  0072  084A               	movf	??___ftadd,w
  1594  0073  1683               	bsf	3,5	;RP0=1, select bank1
  1595  0074  1303               	bcf	3,6	;RP1=0, select bank1
  1596  0075  00A0               	movwf	___ftadd@sign^(0+128)
  1597  0076  1283               	bcf	3,5	;RP0=0, select bank0
  1598  0077  1303               	bcf	3,6	;RP1=0, select bank0
  1599  0078  1FC6               	btfss	___ftadd@f1+2,7
  1600  0079  287D               	goto	l372
  1601  007A  1683               	bsf	3,5	;RP0=1, select bank1
  1602  007B  1303               	bcf	3,6	;RP1=0, select bank1
  1603  007C  17A0               	bsf	___ftadd@sign^(0+128),7
  1604  007D                     l372:	
  1605  007D  1283               	bcf	3,5	;RP0=0, select bank0
  1606  007E  1FC9               	btfss	___ftadd@f2+2,7
  1607  007F  2883               	goto	l373
  1608  0080  1683               	bsf	3,5	;RP0=1, select bank1
  1609  0081  1303               	bcf	3,6	;RP1=0, select bank1
  1610  0082  1720               	bsf	___ftadd@sign^(0+128),6
  1611  0083                     l373:	
  1612  0083  1283               	bcf	3,5	;RP0=0, select bank0
  1613  0084  17C5               	bsf	___ftadd@f1+1,7
  1614  0085  30FF               	movlw	255
  1615  0086  05C4               	andwf	___ftadd@f1,f
  1616  0087  30FF               	movlw	255
  1617  0088  05C5               	andwf	___ftadd@f1+1,f
  1618  0089  3000               	movlw	0
  1619  008A  05C6               	andwf	___ftadd@f1+2,f
  1620  008B  17C8               	bsf	___ftadd@f2+1,7
  1621  008C  30FF               	movlw	255
  1622  008D  05C7               	andwf	___ftadd@f2,f
  1623  008E  30FF               	movlw	255
  1624  008F  05C8               	andwf	___ftadd@f2+1,f
  1625  0090  3000               	movlw	0
  1626  0091  05C9               	andwf	___ftadd@f2+2,f
  1627  0092  1683               	bsf	3,5	;RP0=1, select bank1
  1628  0093  1303               	bcf	3,6	;RP1=0, select bank1
  1629  0094  0821               	movf	___ftadd@exp2^(0+128),w
  1630  0095  0222               	subwf	___ftadd@exp1^(0+128),w
  1631  0096  1803               	skipnc
  1632  0097  28C6               	goto	l1627
  1633  0098                     l1617:	
  1634  0098  3001               	movlw	1
  1635  0099                     u2285:	
  1636  0099  1003               	clrc
  1637  009A  1283               	bcf	3,5	;RP0=0, select bank0
  1638  009B  1303               	bcf	3,6	;RP1=0, select bank0
  1639  009C  0DC7               	rlf	___ftadd@f2,f
  1640  009D  0DC8               	rlf	___ftadd@f2+1,f
  1641  009E  0DC9               	rlf	___ftadd@f2+2,f
  1642  009F  3EFF               	addlw	-1
  1643  00A0  1D03               	skipz
  1644  00A1  2899               	goto	u2285
  1645  00A2  3001               	movlw	1
  1646  00A3  1683               	bsf	3,5	;RP0=1, select bank1
  1647  00A4  1303               	bcf	3,6	;RP1=0, select bank1
  1648  00A5  02A1               	subwf	___ftadd@exp2^(0+128),f
  1649  00A6  0821               	movf	___ftadd@exp2^(0+128),w
  1650  00A7  0622               	xorwf	___ftadd@exp1^(0+128),w
  1651  00A8  1903               	skipnz
  1652  00A9  28C1               	goto	l1625
  1653  00AA  3001               	movlw	1
  1654  00AB  02A0               	subwf	___ftadd@sign^(0+128),f
  1655  00AC  0820               	movf	___ftadd@sign^(0+128),w
  1656  00AD  3907               	andlw	7
  1657  00AE  1903               	btfsc	3,2
  1658  00AF  28C1               	goto	l1625
  1659  00B0  2898               	goto	l1617
  1660  00B1                     l1623:	
  1661  00B1  3001               	movlw	1
  1662  00B2                     u2315:	
  1663  00B2  1003               	clrc
  1664  00B3  1283               	bcf	3,5	;RP0=0, select bank0
  1665  00B4  1303               	bcf	3,6	;RP1=0, select bank0
  1666  00B5  0CC6               	rrf	___ftadd@f1+2,f
  1667  00B6  0CC5               	rrf	___ftadd@f1+1,f
  1668  00B7  0CC4               	rrf	___ftadd@f1,f
  1669  00B8  3EFF               	addlw	-1
  1670  00B9  1D03               	skipz
  1671  00BA  28B2               	goto	u2315
  1672  00BB  3001               	movlw	1
  1673  00BC  00CA               	movwf	??___ftadd
  1674  00BD  084A               	movf	??___ftadd,w
  1675  00BE  1683               	bsf	3,5	;RP0=1, select bank1
  1676  00BF  1303               	bcf	3,6	;RP1=0, select bank1
  1677  00C0  07A2               	addwf	___ftadd@exp1^(0+128),f
  1678  00C1                     l1625:	
  1679  00C1  0822               	movf	___ftadd@exp1^(0+128),w
  1680  00C2  0621               	xorwf	___ftadd@exp2^(0+128),w
  1681  00C3  1903               	btfsc	3,2
  1682  00C4  28F7               	goto	l382
  1683  00C5  28B1               	goto	l1623
  1684  00C6                     l1627:	
  1685  00C6  0822               	movf	___ftadd@exp1^(0+128),w
  1686  00C7  0221               	subwf	___ftadd@exp2^(0+128),w
  1687  00C8  1803               	skipnc
  1688  00C9  28F7               	goto	l382
  1689  00CA                     l1629:	
  1690  00CA  3001               	movlw	1
  1691  00CB                     u2345:	
  1692  00CB  1003               	clrc
  1693  00CC  1283               	bcf	3,5	;RP0=0, select bank0
  1694  00CD  1303               	bcf	3,6	;RP1=0, select bank0
  1695  00CE  0DC4               	rlf	___ftadd@f1,f
  1696  00CF  0DC5               	rlf	___ftadd@f1+1,f
  1697  00D0  0DC6               	rlf	___ftadd@f1+2,f
  1698  00D1  3EFF               	addlw	-1
  1699  00D2  1D03               	skipz
  1700  00D3  28CB               	goto	u2345
  1701  00D4  3001               	movlw	1
  1702  00D5  1683               	bsf	3,5	;RP0=1, select bank1
  1703  00D6  1303               	bcf	3,6	;RP1=0, select bank1
  1704  00D7  02A2               	subwf	___ftadd@exp1^(0+128),f
  1705  00D8  0821               	movf	___ftadd@exp2^(0+128),w
  1706  00D9  0622               	xorwf	___ftadd@exp1^(0+128),w
  1707  00DA  1903               	skipnz
  1708  00DB  28F3               	goto	l1637
  1709  00DC  3001               	movlw	1
  1710  00DD  02A0               	subwf	___ftadd@sign^(0+128),f
  1711  00DE  0820               	movf	___ftadd@sign^(0+128),w
  1712  00DF  3907               	andlw	7
  1713  00E0  1903               	btfsc	3,2
  1714  00E1  28F3               	goto	l1637
  1715  00E2  28CA               	goto	l1629
  1716  00E3                     l1635:	
  1717  00E3  3001               	movlw	1
  1718  00E4                     u2375:	
  1719  00E4  1003               	clrc
  1720  00E5  1283               	bcf	3,5	;RP0=0, select bank0
  1721  00E6  1303               	bcf	3,6	;RP1=0, select bank0
  1722  00E7  0CC9               	rrf	___ftadd@f2+2,f
  1723  00E8  0CC8               	rrf	___ftadd@f2+1,f
  1724  00E9  0CC7               	rrf	___ftadd@f2,f
  1725  00EA  3EFF               	addlw	-1
  1726  00EB  1D03               	skipz
  1727  00EC  28E4               	goto	u2375
  1728  00ED  3001               	movlw	1
  1729  00EE  00CA               	movwf	??___ftadd
  1730  00EF  084A               	movf	??___ftadd,w
  1731  00F0  1683               	bsf	3,5	;RP0=1, select bank1
  1732  00F1  1303               	bcf	3,6	;RP1=0, select bank1
  1733  00F2  07A1               	addwf	___ftadd@exp2^(0+128),f
  1734  00F3                     l1637:	
  1735  00F3  0822               	movf	___ftadd@exp1^(0+128),w
  1736  00F4  0621               	xorwf	___ftadd@exp2^(0+128),w
  1737  00F5  1D03               	skipz
  1738  00F6  28E3               	goto	l1635
  1739  00F7                     l382:	
  1740  00F7  1FA0               	btfss	___ftadd@sign^(0+128),7
  1741  00F8  290B               	goto	l1641
  1742  00F9  30FF               	movlw	255
  1743  00FA  1283               	bcf	3,5	;RP0=0, select bank0
  1744  00FB  1303               	bcf	3,6	;RP1=0, select bank0
  1745  00FC  06C4               	xorwf	___ftadd@f1,f
  1746  00FD  30FF               	movlw	255
  1747  00FE  06C5               	xorwf	___ftadd@f1+1,f
  1748  00FF  30FF               	movlw	255
  1749  0100  06C6               	xorwf	___ftadd@f1+2,f
  1750  0101  3001               	movlw	1
  1751  0102  07C4               	addwf	___ftadd@f1,f
  1752  0103  3000               	movlw	0
  1753  0104  1803               	skipnc
  1754  0105  3001               	movlw	1
  1755  0106  07C5               	addwf	___ftadd@f1+1,f
  1756  0107  3000               	movlw	0
  1757  0108  1803               	skipnc
  1758  0109  3001               	movlw	1
  1759  010A  07C6               	addwf	___ftadd@f1+2,f
  1760  010B                     l1641:	
  1761  010B  1683               	bsf	3,5	;RP0=1, select bank1
  1762  010C  1303               	bcf	3,6	;RP1=0, select bank1
  1763  010D  1F20               	btfss	___ftadd@sign^(0+128),6
  1764  010E  2921               	goto	l1645
  1765  010F  30FF               	movlw	255
  1766  0110  1283               	bcf	3,5	;RP0=0, select bank0
  1767  0111  1303               	bcf	3,6	;RP1=0, select bank0
  1768  0112  06C7               	xorwf	___ftadd@f2,f
  1769  0113  30FF               	movlw	255
  1770  0114  06C8               	xorwf	___ftadd@f2+1,f
  1771  0115  30FF               	movlw	255
  1772  0116  06C9               	xorwf	___ftadd@f2+2,f
  1773  0117  3001               	movlw	1
  1774  0118  07C7               	addwf	___ftadd@f2,f
  1775  0119  3000               	movlw	0
  1776  011A  1803               	skipnc
  1777  011B  3001               	movlw	1
  1778  011C  07C8               	addwf	___ftadd@f2+1,f
  1779  011D  3000               	movlw	0
  1780  011E  1803               	skipnc
  1781  011F  3001               	movlw	1
  1782  0120  07C9               	addwf	___ftadd@f2+2,f
  1783  0121                     l1645:	
  1784  0121  1683               	bsf	3,5	;RP0=1, select bank1
  1785  0122  1303               	bcf	3,6	;RP1=0, select bank1
  1786  0123  01A0               	clrf	___ftadd@sign^(0+128)
  1787  0124  1283               	bcf	3,5	;RP0=0, select bank0
  1788  0125  1303               	bcf	3,6	;RP1=0, select bank0
  1789  0126  0844               	movf	___ftadd@f1,w
  1790  0127  07C7               	addwf	___ftadd@f2,f
  1791  0128  0845               	movf	___ftadd@f1+1,w
  1792  0129  1103               	clrz
  1793  012A  1803               	skipnc
  1794  012B  0A45               	incf	___ftadd@f1+1,w
  1795  012C  1D03               	btfss	3,2
  1796  012D  07C8               	addwf	___ftadd@f2+1,f
  1797  012E  0846               	movf	___ftadd@f1+2,w
  1798  012F  1103               	clrz
  1799  0130  1803               	skipnc
  1800  0131  0A46               	incf	___ftadd@f1+2,w
  1801  0132  1D03               	btfss	3,2
  1802  0133  07C9               	addwf	___ftadd@f2+2,f
  1803  0134  1FC9               	btfss	___ftadd@f2+2,7
  1804  0135  294A               	goto	l1655
  1805  0136  30FF               	movlw	255
  1806  0137  06C7               	xorwf	___ftadd@f2,f
  1807  0138  30FF               	movlw	255
  1808  0139  06C8               	xorwf	___ftadd@f2+1,f
  1809  013A  30FF               	movlw	255
  1810  013B  06C9               	xorwf	___ftadd@f2+2,f
  1811  013C  3001               	movlw	1
  1812  013D  07C7               	addwf	___ftadd@f2,f
  1813  013E  3000               	movlw	0
  1814  013F  1803               	skipnc
  1815  0140  3001               	movlw	1
  1816  0141  07C8               	addwf	___ftadd@f2+1,f
  1817  0142  3000               	movlw	0
  1818  0143  1803               	skipnc
  1819  0144  3001               	movlw	1
  1820  0145  07C9               	addwf	___ftadd@f2+2,f
  1821  0146  1683               	bsf	3,5	;RP0=1, select bank1
  1822  0147  1303               	bcf	3,6	;RP1=0, select bank1
  1823  0148  01A0               	clrf	___ftadd@sign^(0+128)
  1824  0149  0AA0               	incf	___ftadd@sign^(0+128),f
  1825  014A                     l1655:	
  1826  014A  1283               	bcf	3,5	;RP0=0, select bank0
  1827  014B  0847               	movf	___ftadd@f2,w
  1828  014C  00A6               	movwf	___ftpack@arg
  1829  014D  0848               	movf	___ftadd@f2+1,w
  1830  014E  00A7               	movwf	___ftpack@arg+1
  1831  014F  0849               	movf	___ftadd@f2+2,w
  1832  0150  00A8               	movwf	___ftpack@arg+2
  1833  0151  1683               	bsf	3,5	;RP0=1, select bank1
  1834  0152  1303               	bcf	3,6	;RP1=0, select bank1
  1835  0153  0822               	movf	___ftadd@exp1^(0+128),w
  1836  0154  1283               	bcf	3,5	;RP0=0, select bank0
  1837  0155  1303               	bcf	3,6	;RP1=0, select bank0
  1838  0156  00CA               	movwf	??___ftadd
  1839  0157  084A               	movf	??___ftadd,w
  1840  0158  00A9               	movwf	___ftpack@exp
  1841  0159  1683               	bsf	3,5	;RP0=1, select bank1
  1842  015A  1303               	bcf	3,6	;RP1=0, select bank1
  1843  015B  0820               	movf	___ftadd@sign^(0+128),w
  1844  015C  1283               	bcf	3,5	;RP0=0, select bank0
  1845  015D  1303               	bcf	3,6	;RP1=0, select bank0
  1846  015E  00CB               	movwf	??___ftadd+1
  1847  015F  084B               	movf	??___ftadd+1,w
  1848  0160  00AA               	movwf	___ftpack@sign
  1849  0161  118A  2457         	fcall	___ftpack
  1850  0163  1283               	bcf	3,5	;RP0=0, select bank0
  1851  0164  1303               	bcf	3,6	;RP1=0, select bank0
  1852  0165  0826               	movf	?___ftpack,w
  1853  0166  00C4               	movwf	?___ftadd
  1854  0167  0827               	movf	?___ftpack+1,w
  1855  0168  00C5               	movwf	?___ftadd+1
  1856  0169  0828               	movf	?___ftpack+2,w
  1857  016A  00C6               	movwf	?___ftadd+2
  1858  016B  0008               	return
  1859  016C                     __end_of___ftadd:	
  1860                           
  1861                           	psect	text8
  1862  052A                     __ptext8:	
  1863 ;; *************** function _Mode0 *****************
  1864 ;; Defined at:
  1865 ;;		line 238 in file "C:\Users\Robert Kydd\Documents\Personal\HW\Mechatronics\CS5 V2\CS5_Group16.c"
  1866 ;; Parameters:    Size  Location     Type
  1867 ;;		None
  1868 ;; Auto vars:     Size  Location     Type
  1869 ;;		None
  1870 ;; Return value:  Size  Location     Type
  1871 ;;		None               void
  1872 ;; Registers used:
  1873 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1874 ;; Tracked objects:
  1875 ;;		On entry : 0/0
  1876 ;;		On exit  : 0/0
  1877 ;;		Unchanged: 0/0
  1878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1879 ;;      Params:         0       0       0       0       0
  1880 ;;      Locals:         0       0       0       0       0
  1881 ;;      Temps:          0       0       0       0       0
  1882 ;;      Totals:         0       0       0       0       0
  1883 ;;Total ram usage:        0 bytes
  1884 ;; Hardware stack levels used:    1
  1885 ;; Hardware stack levels required when called:    5
  1886 ;; This function calls:
  1887 ;;		_PControl
  1888 ;;		_brakeFlash
  1889 ;;		_countUp
  1890 ;; This function is called by:
  1891 ;;		_main
  1892 ;; This function uses a non-reentrant model
  1893 ;;
  1894                           
  1895                           
  1896                           ;psect for function _Mode0
  1897  052A                     _Mode0:	
  1898                           
  1899                           ;CS5_Group16.c: 240: CCPR1L = vRef;
  1900                           
  1901                           ;incstack = 0
  1902                           ; Regs used in _Mode0: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1903  052A  1283               	bcf	3,5	;RP0=0, select bank0
  1904  052B  1303               	bcf	3,6	;RP1=0, select bank0
  1905  052C  0867               	movf	_vRef,w
  1906  052D  0095               	movwf	21	;volatile
  1907  052E                     l1763:	
  1908                           ;CS5_Group16.c: 243: {
  1909                           ;CS5_Group16.c: 244: while(enCount < 100)
  1910                           
  1911                           ;CS5_Group16.c: 242: while(1 != 2)
  1912                           
  1913  052E  1283               	bcf	3,5	;RP0=0, select bank0
  1914  052F  1303               	bcf	3,6	;RP1=0, select bank0
  1915  0530  0857               	movf	_enCount+1,w
  1916  0531  3A80               	xorlw	128
  1917  0532  00FF               	movwf	127
  1918  0533  3080               	movlw	128
  1919  0534  027F               	subwf	127,w
  1920  0535  1D03               	skipz
  1921  0536  2D39               	goto	u2645
  1922  0537  3064               	movlw	100
  1923  0538  0256               	subwf	_enCount,w
  1924  0539                     u2645:	
  1925  0539  1803               	btfsc	3,0
  1926  053A  2D42               	goto	l1765
  1927                           
  1928                           ;CS5_Group16.c: 245: {
  1929                           ;CS5_Group16.c: 246: countUp();
  1930  053B  118A  278B  118A   	fcall	_countUp
  1931                           
  1932                           ;CS5_Group16.c: 247: PControl();
  1933  053E  118A  23E6  118A   	fcall	_PControl
  1934  0541  2D2E               	goto	l1763
  1935  0542                     l1765:	
  1936                           
  1937                           ;CS5_Group16.c: 248: }
  1938                           ;CS5_Group16.c: 249: enCount = 0;
  1939  0542  1283               	bcf	3,5	;RP0=0, select bank0
  1940  0543  1303               	bcf	3,6	;RP1=0, select bank0
  1941  0544  01D6               	clrf	_enCount
  1942  0545  01D7               	clrf	_enCount+1
  1943                           
  1944                           ;CS5_Group16.c: 250: vRef = vRef + 1;
  1945  0546  0867               	movf	_vRef,w
  1946  0547  3E01               	addlw	1
  1947  0548  00E7               	movwf	_vRef
  1948  0549  0868               	movf	_vRef+1,w
  1949  054A  1803               	skipnc
  1950  054B  3E01               	addlw	1
  1951  054C  3E00               	addlw	0
  1952  054D  00E8               	movwf	_vRef+1
  1953                           
  1954                           ;CS5_Group16.c: 253: if(vRef == 190)
  1955  054E  30BE               	movlw	190
  1956  054F  0667               	xorwf	_vRef,w
  1957  0550  0468               	iorwf	_vRef+1,w
  1958  0551  1903               	btfsc	3,2
  1959  0552  2D5A               	goto	l1775
  1960  0553  2D2E               	goto	l1763
  1961  0554                     l1773:	
  1962                           ;CS5_Group16.c: 254: {
  1963                           ;CS5_Group16.c: 255: while(enCount < 6000)
  1964                           
  1965                           
  1966                           ;CS5_Group16.c: 256: {
  1967                           ;CS5_Group16.c: 257: countUp();
  1968  0554  118A  278B  118A   	fcall	_countUp
  1969                           
  1970                           ;CS5_Group16.c: 258: PControl();
  1971  0557  118A  23E6  118A   	fcall	_PControl
  1972  055A                     l1775:	
  1973  055A  1283               	bcf	3,5	;RP0=0, select bank0
  1974  055B  1303               	bcf	3,6	;RP1=0, select bank0
  1975  055C  0857               	movf	_enCount+1,w
  1976  055D  3A80               	xorlw	128
  1977  055E  00FF               	movwf	127
  1978  055F  3097               	movlw	151
  1979  0560  027F               	subwf	127,w
  1980  0561  1D03               	skipz
  1981  0562  2D65               	goto	u2665
  1982  0563  3070               	movlw	112
  1983  0564  0256               	subwf	_enCount,w
  1984  0565                     u2665:	
  1985  0565  1C03               	skipc
  1986  0566  2D54               	goto	l1773
  1987                           
  1988                           ;CS5_Group16.c: 259: }
  1989                           ;CS5_Group16.c: 260: enCount = 0;
  1990  0567  1283               	bcf	3,5	;RP0=0, select bank0
  1991  0568  1303               	bcf	3,6	;RP1=0, select bank0
  1992  0569  01D6               	clrf	_enCount
  1993  056A  01D7               	clrf	_enCount+1
  1994  056B                     l1781:	
  1995                           ;CS5_Group16.c: 261: break;
  1996                           
  1997  056B  1283               	bcf	3,5	;RP0=0, select bank0
  1998  056C  1303               	bcf	3,6	;RP1=0, select bank0
  1999  056D  0857               	movf	_enCount+1,w
  2000  056E  3A80               	xorlw	128
  2001  056F  00FF               	movwf	127
  2002  0570  3080               	movlw	128
  2003  0571  027F               	subwf	127,w
  2004  0572  1D03               	skipz
  2005  0573  2D76               	goto	u2675
  2006  0574  3064               	movlw	100
  2007  0575  0256               	subwf	_enCount,w
  2008  0576                     u2675:	
  2009  0576  1803               	btfsc	3,0
  2010  0577  2D7F               	goto	l1783
  2011                           
  2012                           ;CS5_Group16.c: 267: {
  2013                           ;CS5_Group16.c: 268: countUp();
  2014                           
  2015                           ;CS5_Group16.c: 265: {
  2016                           ;CS5_Group16.c: 266: while(enCount < 100)
  2017                           
  2018                           ;CS5_Group16.c: 262: }
  2019                           ;CS5_Group16.c: 263: }
  2020                           ;CS5_Group16.c: 264: while(1 != 2)
  2021  0578  118A  278B  118A   	fcall	_countUp
  2022                           
  2023                           ;CS5_Group16.c: 269: PControl();
  2024  057B  118A  23E6  118A   	fcall	_PControl
  2025  057E  2D6B               	goto	l1781
  2026  057F                     l1783:	
  2027                           
  2028                           ;CS5_Group16.c: 270: }
  2029                           ;CS5_Group16.c: 271: enCount = 0;
  2030  057F  1283               	bcf	3,5	;RP0=0, select bank0
  2031  0580  1303               	bcf	3,6	;RP1=0, select bank0
  2032  0581  01D6               	clrf	_enCount
  2033  0582  01D7               	clrf	_enCount+1
  2034                           
  2035                           ;CS5_Group16.c: 272: vRef = vRef - 1;
  2036  0583  0867               	movf	_vRef,w
  2037  0584  3EFF               	addlw	255
  2038  0585  00E7               	movwf	_vRef
  2039  0586  0868               	movf	_vRef+1,w
  2040  0587  1803               	skipnc
  2041  0588  3E01               	addlw	1
  2042  0589  3EFF               	addlw	255
  2043  058A  00E8               	movwf	_vRef+1
  2044                           
  2045                           ;CS5_Group16.c: 274: if(vRef == 140)
  2046  058B  308C               	movlw	140
  2047  058C  0667               	xorwf	_vRef,w
  2048  058D  0468               	iorwf	_vRef+1,w
  2049  058E  1D03               	skipz
  2050  058F  2D6B               	goto	l1781
  2051                           
  2052                           ;CS5_Group16.c: 275: {
  2053                           ;CS5_Group16.c: 276: brakeFlash();
  2054  0590  118A  26CC         	fcall	_brakeFlash
  2055                           
  2056                           ;CS5_Group16.c: 277: break;
  2057  0592  0008               	return
  2058  0593                     __end_of_Mode0:	
  2059                           
  2060                           	psect	text9
  2061  078B                     __ptext9:	
  2062 ;; *************** function _countUp *****************
  2063 ;; Defined at:
  2064 ;;		line 151 in file "C:\Users\Robert Kydd\Documents\Personal\HW\Mechatronics\CS5 V2\CS5_Group16.c"
  2065 ;; Parameters:    Size  Location     Type
  2066 ;;		None
  2067 ;; Auto vars:     Size  Location     Type
  2068 ;;		None
  2069 ;; Return value:  Size  Location     Type
  2070 ;;		None               void
  2071 ;; Registers used:
  2072 ;;		wreg, status,2, status,0
  2073 ;; Tracked objects:
  2074 ;;		On entry : 0/0
  2075 ;;		On exit  : 0/0
  2076 ;;		Unchanged: 0/0
  2077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2078 ;;      Params:         0       0       0       0       0
  2079 ;;      Locals:         0       0       0       0       0
  2080 ;;      Temps:          0       0       0       0       0
  2081 ;;      Totals:         0       0       0       0       0
  2082 ;;Total ram usage:        0 bytes
  2083 ;; Hardware stack levels used:    1
  2084 ;; Hardware stack levels required when called:    2
  2085 ;; This function calls:
  2086 ;;		Nothing
  2087 ;; This function is called by:
  2088 ;;		_Mode0
  2089 ;;		_Mode3
  2090 ;; This function uses a non-reentrant model
  2091 ;;
  2092                           
  2093                           
  2094                           ;psect for function _countUp
  2095  078B                     _countUp:	
  2096                           
  2097                           ;CS5_Group16.c: 153: if(encoder == 1)
  2098                           
  2099                           ;incstack = 0
  2100                           ; Regs used in _countUp: [wreg+status,2+status,0]
  2101  078B  1283               	bcf	3,5	;RP0=0, select bank0
  2102  078C  1303               	bcf	3,6	;RP1=0, select bank0
  2103  078D  1F07               	btfss	7,6
  2104  078E  0008               	return
  2105  078F                     l105:	
  2106                           ;CS5_Group16.c: 154: {
  2107                           ;CS5_Group16.c: 155: while(encoder == 1){}
  2108                           
  2109  078F  1B07               	btfsc	7,6
  2110  0790  2F8F               	goto	l105
  2111                           
  2112                           ;CS5_Group16.c: 156: enCount = enCount + 1;
  2113  0791  0856               	movf	_enCount,w
  2114  0792  3E01               	addlw	1
  2115  0793  00D6               	movwf	_enCount
  2116  0794  0857               	movf	_enCount+1,w
  2117  0795  1803               	skipnc
  2118  0796  3E01               	addlw	1
  2119  0797  3E00               	addlw	0
  2120  0798  00D7               	movwf	_enCount+1
  2121  0799  0008               	return
  2122  079A                     __end_of_countUp:	
  2123                           
  2124                           	psect	text10
  2125  06CC                     __ptext10:	
  2126 ;; *************** function _brakeFlash *****************
  2127 ;; Defined at:
  2128 ;;		line 135 in file "C:\Users\Robert Kydd\Documents\Personal\HW\Mechatronics\CS5 V2\CS5_Group16.c"
  2129 ;; Parameters:    Size  Location     Type
  2130 ;;		None
  2131 ;; Auto vars:     Size  Location     Type
  2132 ;;		None
  2133 ;; Return value:  Size  Location     Type
  2134 ;;		None               void
  2135 ;; Registers used:
  2136 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2137 ;; Tracked objects:
  2138 ;;		On entry : 0/0
  2139 ;;		On exit  : 0/0
  2140 ;;		Unchanged: 0/0
  2141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2142 ;;      Params:         0       0       0       0       0
  2143 ;;      Locals:         0       0       0       0       0
  2144 ;;      Temps:          0       0       0       0       0
  2145 ;;      Totals:         0       0       0       0       0
  2146 ;;Total ram usage:        0 bytes
  2147 ;; Hardware stack levels used:    1
  2148 ;; Hardware stack levels required when called:    3
  2149 ;; This function calls:
  2150 ;;		_flashDelay
  2151 ;; This function is called by:
  2152 ;;		_Mode0
  2153 ;;		_Mode3
  2154 ;; This function uses a non-reentrant model
  2155 ;;
  2156                           
  2157                           
  2158                           ;psect for function _brakeFlash
  2159  06CC                     _brakeFlash:	
  2160                           
  2161                           ;CS5_Group16.c: 137: CCPR1L = 0;
  2162                           
  2163                           ;incstack = 0
  2164                           ; Regs used in _brakeFlash: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2165  06CC  1283               	bcf	3,5	;RP0=0, select bank0
  2166  06CD  1303               	bcf	3,6	;RP1=0, select bank0
  2167  06CE  0195               	clrf	21	;volatile
  2168                           
  2169                           ;CS5_Group16.c: 138: brake = 1;
  2170  06CF  1487               	bsf	7,1
  2171  06D0                     l1295:	
  2172                           ;CS5_Group16.c: 140: while(aSpeed != 128){}
  2173                           
  2174  06D0  3080               	movlw	128
  2175  06D1  0650               	xorwf	_aSpeed,w
  2176  06D2  0451               	iorwf	_aSpeed+1,w
  2177  06D3  1903               	btfsc	3,2
  2178  06D4  2EEB               	goto	l1307
  2179  06D5  2ED0               	goto	l1295
  2180  06D6                     l1297:	
  2181                           ;CS5_Group16.c: 141: while(i < 10)
  2182                           
  2183                           
  2184                           ;CS5_Group16.c: 142: {
  2185                           ;CS5_Group16.c: 143: PORTB = 0B00000000;
  2186  06D6  1283               	bcf	3,5	;RP0=0, select bank0
  2187  06D7  1303               	bcf	3,6	;RP1=0, select bank0
  2188  06D8  0186               	clrf	6	;volatile
  2189                           
  2190                           ;CS5_Group16.c: 144: flashDelay();
  2191  06D9  118A  277B  118A   	fcall	_flashDelay
  2192                           
  2193                           ;CS5_Group16.c: 145: PORTB = 0B11111111;
  2194  06DC  30FF               	movlw	255
  2195  06DD  1283               	bcf	3,5	;RP0=0, select bank0
  2196  06DE  1303               	bcf	3,6	;RP1=0, select bank0
  2197  06DF  0086               	movwf	6	;volatile
  2198                           
  2199                           ;CS5_Group16.c: 146: flashDelay();
  2200  06E0  118A  277B  118A   	fcall	_flashDelay
  2201                           
  2202                           ;CS5_Group16.c: 147: i = i + 1;
  2203  06E3  087B               	movf	_i,w
  2204  06E4  3E01               	addlw	1
  2205  06E5  00FB               	movwf	_i
  2206  06E6  087C               	movf	_i+1,w
  2207  06E7  1803               	skipnc
  2208  06E8  3E01               	addlw	1
  2209  06E9  3E00               	addlw	0
  2210  06EA  00FC               	movwf	_i+1
  2211  06EB                     l1307:	
  2212  06EB  087C               	movf	_i+1,w
  2213  06EC  3A80               	xorlw	128
  2214  06ED  00FF               	movwf	127
  2215  06EE  3080               	movlw	128
  2216  06EF  027F               	subwf	127,w
  2217  06F0  1D03               	skipz
  2218  06F1  2EF4               	goto	u1705
  2219  06F2  300A               	movlw	10
  2220  06F3  027B               	subwf	_i,w
  2221  06F4                     u1705:	
  2222  06F4  1803               	btfsc	3,0
  2223  06F5  0008               	return
  2224  06F6  2ED6               	goto	l1297
  2225  06F7                     __end_of_brakeFlash:	
  2226                           
  2227                           	psect	text11
  2228  077B                     __ptext11:	
  2229 ;; *************** function _flashDelay *****************
  2230 ;; Defined at:
  2231 ;;		line 87 in file "C:\Users\Robert Kydd\Documents\Personal\HW\Mechatronics\CS5 V2\CS5_Group16.c"
  2232 ;; Parameters:    Size  Location     Type
  2233 ;;		None
  2234 ;; Auto vars:     Size  Location     Type
  2235 ;;		None
  2236 ;; Return value:  Size  Location     Type
  2237 ;;		None               void
  2238 ;; Registers used:
  2239 ;;		wreg
  2240 ;; Tracked objects:
  2241 ;;		On entry : 0/0
  2242 ;;		On exit  : 0/0
  2243 ;;		Unchanged: 0/0
  2244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2245 ;;      Params:         0       0       0       0       0
  2246 ;;      Locals:         0       0       0       0       0
  2247 ;;      Temps:          0       3       0       0       0
  2248 ;;      Totals:         0       3       0       0       0
  2249 ;;Total ram usage:        3 bytes
  2250 ;; Hardware stack levels used:    1
  2251 ;; Hardware stack levels required when called:    2
  2252 ;; This function calls:
  2253 ;;		Nothing
  2254 ;; This function is called by:
  2255 ;;		_brakeFlash
  2256 ;; This function uses a non-reentrant model
  2257 ;;
  2258                           
  2259                           
  2260                           ;psect for function _flashDelay
  2261  077B                     _flashDelay:	
  2262                           
  2263                           ;CS5_Group16.c: 89: _delay((unsigned long)((500)*(20000000/4000.0)));
  2264                           
  2265                           ;incstack = 0
  2266                           ; Regs used in _flashDelay: [wreg]
  2267  077B  300D               	movlw	13
  2268  077C  1283               	bcf	3,5	;RP0=0, select bank0
  2269  077D  1303               	bcf	3,6	;RP1=0, select bank0
  2270  077E  00A8               	movwf	??_flashDelay+2
  2271  077F  30AF               	movlw	175
  2272  0780  00A7               	movwf	??_flashDelay+1
  2273  0781  30C1               	movlw	193
  2274  0782  00A6               	movwf	??_flashDelay
  2275  0783                     u2817:	
  2276  0783  0BA6               	decfsz	??_flashDelay,f
  2277  0784  2F83               	goto	u2817
  2278  0785  0BA7               	decfsz	??_flashDelay+1,f
  2279  0786  2F83               	goto	u2817
  2280  0787  0BA8               	decfsz	??_flashDelay+2,f
  2281  0788  2F83               	goto	u2817
  2282  0789  0000               	nop
  2283  078A  0008               	return
  2284  078B                     __end_of_flashDelay:	
  2285                           
  2286                           	psect	text12
  2287  03E6                     __ptext12:	
  2288 ;; *************** function _PControl *****************
  2289 ;; Defined at:
  2290 ;;		line 160 in file "C:\Users\Robert Kydd\Documents\Personal\HW\Mechatronics\CS5 V2\CS5_Group16.c"
  2291 ;; Parameters:    Size  Location     Type
  2292 ;;		None
  2293 ;; Auto vars:     Size  Location     Type
  2294 ;;		None
  2295 ;; Return value:  Size  Location     Type
  2296 ;;		None               void
  2297 ;; Registers used:
  2298 ;;		wreg, status,2, status,0, pclath, cstack
  2299 ;; Tracked objects:
  2300 ;;		On entry : 0/0
  2301 ;;		On exit  : 0/0
  2302 ;;		Unchanged: 0/0
  2303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2304 ;;      Params:         0       0       0       0       0
  2305 ;;      Locals:         0       0       0       0       0
  2306 ;;      Temps:          0       2       0       0       0
  2307 ;;      Totals:         0       2       0       0       0
  2308 ;;Total ram usage:        2 bytes
  2309 ;; Hardware stack levels used:    1
  2310 ;; Hardware stack levels required when called:    4
  2311 ;; This function calls:
  2312 ;;		___awtoft
  2313 ;;		___ftge
  2314 ;;		___ftmul
  2315 ;;		___fttol
  2316 ;; This function is called by:
  2317 ;;		_indexMotor
  2318 ;;		_Mode0
  2319 ;; This function uses a non-reentrant model
  2320 ;;
  2321                           
  2322                           
  2323                           ;psect for function _PControl
  2324  03E6                     _PControl:	
  2325                           
  2326                           ;CS5_Group16.c: 162: vError = vRef - aSpeed;
  2327                           
  2328                           ;incstack = 0
  2329                           ; Regs used in _PControl: [wreg+status,2+status,0+pclath+cstack]
  2330  03E6  1283               	bcf	3,5	;RP0=0, select bank0
  2331  03E7  1303               	bcf	3,6	;RP1=0, select bank0
  2332  03E8  0950               	comf	_aSpeed,w
  2333  03E9  00C4               	movwf	??_PControl
  2334  03EA  0951               	comf	_aSpeed+1,w
  2335  03EB  00C5               	movwf	??_PControl+1
  2336  03EC  0AC4               	incf	??_PControl,f
  2337  03ED  1903               	skipnz
  2338  03EE  0AC5               	incf	??_PControl+1,f
  2339  03EF  0867               	movf	_vRef,w
  2340  03F0  0744               	addwf	??_PControl,w
  2341  03F1  00E5               	movwf	_vError
  2342  03F2  0868               	movf	_vRef+1,w
  2343  03F3  1803               	skipnc
  2344  03F4  0A68               	incf	_vRef+1,w
  2345  03F5  0745               	addwf	??_PControl+1,w
  2346  03F6  00E6               	movwf	_vError+1
  2347                           
  2348                           ;CS5_Group16.c: 163: PORTB = vError;
  2349  03F7  0865               	movf	_vError,w
  2350  03F8  0086               	movwf	6	;volatile
  2351                           
  2352                           ;CS5_Group16.c: 165: duty = vError * K_p;
  2353  03F9  085F               	movf	_K_p,w
  2354  03FA  00B4               	movwf	___ftmul@f1
  2355  03FB  0860               	movf	_K_p+1,w
  2356  03FC  00B5               	movwf	___ftmul@f1+1
  2357  03FD  0861               	movf	_K_p+2,w
  2358  03FE  00B6               	movwf	___ftmul@f1+2
  2359  03FF  0866               	movf	_vError+1,w
  2360  0400  01AF               	clrf	___awtoft@c+1
  2361  0401  07AF               	addwf	___awtoft@c+1,f
  2362  0402  0865               	movf	_vError,w
  2363  0403  01AE               	clrf	___awtoft@c
  2364  0404  07AE               	addwf	___awtoft@c,f
  2365  0405  118A  26F7  118A   	fcall	___awtoft
  2366  0408  1283               	bcf	3,5	;RP0=0, select bank0
  2367  0409  1303               	bcf	3,6	;RP1=0, select bank0
  2368  040A  082E               	movf	?___awtoft,w
  2369  040B  00B7               	movwf	___ftmul@f2
  2370  040C  082F               	movf	?___awtoft+1,w
  2371  040D  00B8               	movwf	___ftmul@f2+1
  2372  040E  0830               	movf	?___awtoft+2,w
  2373  040F  00B9               	movwf	___ftmul@f2+2
  2374  0410  118A  2286  118A   	fcall	___ftmul
  2375  0413  1283               	bcf	3,5	;RP0=0, select bank0
  2376  0414  1303               	bcf	3,6	;RP1=0, select bank0
  2377  0415  0834               	movf	?___ftmul,w
  2378  0416  00E2               	movwf	_duty
  2379  0417  0835               	movf	?___ftmul+1,w
  2380  0418  00E3               	movwf	_duty+1
  2381  0419  0836               	movf	?___ftmul+2,w
  2382  041A  00E4               	movwf	_duty+2
  2383                           
  2384                           ;CS5_Group16.c: 167: if(duty > 255)
  2385  041B  3000               	movlw	0
  2386  041C  00A6               	movwf	___ftge@ff1
  2387  041D  307F               	movlw	127
  2388  041E  00A7               	movwf	___ftge@ff1+1
  2389  041F  3043               	movlw	67
  2390  0420  00A8               	movwf	___ftge@ff1+2
  2391  0421  0862               	movf	_duty,w
  2392  0422  00A9               	movwf	___ftge@ff2
  2393  0423  0863               	movf	_duty+1,w
  2394  0424  00AA               	movwf	___ftge@ff2+1
  2395  0425  0864               	movf	_duty+2,w
  2396  0426  00AB               	movwf	___ftge@ff2+2
  2397  0427  118A  2593  118A   	fcall	___ftge
  2398  042A  1803               	btfsc	3,0
  2399  042B  2C31               	goto	l1719
  2400                           
  2401                           ;CS5_Group16.c: 168: {
  2402                           ;CS5_Group16.c: 169: CCPR1L = 255;
  2403  042C  30FF               	movlw	255
  2404  042D  1283               	bcf	3,5	;RP0=0, select bank0
  2405  042E  1303               	bcf	3,6	;RP1=0, select bank0
  2406  042F  0095               	movwf	21	;volatile
  2407                           
  2408                           ;CS5_Group16.c: 170: }
  2409  0430  0008               	return
  2410  0431                     l1719:	
  2411                           
  2412                           ;CS5_Group16.c: 171: else if(duty < 0)
  2413  0431  1283               	bcf	3,5	;RP0=0, select bank0
  2414  0432  1303               	bcf	3,6	;RP1=0, select bank0
  2415  0433  0862               	movf	_duty,w
  2416  0434  00A6               	movwf	___ftge@ff1
  2417  0435  0863               	movf	_duty+1,w
  2418  0436  00A7               	movwf	___ftge@ff1+1
  2419  0437  0864               	movf	_duty+2,w
  2420  0438  00A8               	movwf	___ftge@ff1+2
  2421  0439  3000               	movlw	0
  2422  043A  00A9               	movwf	___ftge@ff2
  2423  043B  3000               	movlw	0
  2424  043C  00AA               	movwf	___ftge@ff2+1
  2425  043D  3000               	movlw	0
  2426  043E  00AB               	movwf	___ftge@ff2+2
  2427  043F  118A  2593  118A   	fcall	___ftge
  2428  0442  1803               	btfsc	3,0
  2429  0443  2C48               	goto	l1723
  2430                           
  2431                           ;CS5_Group16.c: 172: {
  2432                           ;CS5_Group16.c: 173: CCPR1L = 0;
  2433  0444  1283               	bcf	3,5	;RP0=0, select bank0
  2434  0445  1303               	bcf	3,6	;RP1=0, select bank0
  2435  0446  0195               	clrf	21	;volatile
  2436                           
  2437                           ;CS5_Group16.c: 174: }
  2438  0447  0008               	return
  2439  0448                     l1723:	
  2440                           
  2441                           ;CS5_Group16.c: 175: else
  2442                           ;CS5_Group16.c: 176: {
  2443                           ;CS5_Group16.c: 177: CCPR1L = duty;
  2444  0448  1283               	bcf	3,5	;RP0=0, select bank0
  2445  0449  1303               	bcf	3,6	;RP1=0, select bank0
  2446  044A  0862               	movf	_duty,w
  2447  044B  00A6               	movwf	___fttol@f1
  2448  044C  0863               	movf	_duty+1,w
  2449  044D  00A7               	movwf	___fttol@f1+1
  2450  044E  0864               	movf	_duty+2,w
  2451  044F  00A8               	movwf	___fttol@f1+2
  2452  0450  118A  2358         	fcall	___fttol
  2453  0452  1283               	bcf	3,5	;RP0=0, select bank0
  2454  0453  1303               	bcf	3,6	;RP1=0, select bank0
  2455  0454  0826               	movf	?___fttol,w
  2456  0455  0095               	movwf	21	;volatile
  2457  0456  0008               	return
  2458  0457                     __end_of_PControl:	
  2459                           
  2460                           	psect	text13
  2461  0358                     __ptext13:	
  2462 ;; *************** function ___fttol *****************
  2463 ;; Defined at:
  2464 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fttol.c"
  2465 ;; Parameters:    Size  Location     Type
  2466 ;;  f1              3    6[BANK0 ] float 
  2467 ;; Auto vars:     Size  Location     Type
  2468 ;;  lval            4   15[BANK0 ] unsigned long 
  2469 ;;  exp1            1   19[BANK0 ] unsigned char 
  2470 ;;  sign1           1   14[BANK0 ] unsigned char 
  2471 ;; Return value:  Size  Location     Type
  2472 ;;                  4    6[BANK0 ] long 
  2473 ;; Registers used:
  2474 ;;		wreg, status,2, status,0
  2475 ;; Tracked objects:
  2476 ;;		On entry : 0/0
  2477 ;;		On exit  : 0/0
  2478 ;;		Unchanged: 0/0
  2479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2480 ;;      Params:         0       4       0       0       0
  2481 ;;      Locals:         0       6       0       0       0
  2482 ;;      Temps:          0       4       0       0       0
  2483 ;;      Totals:         0      14       0       0       0
  2484 ;;Total ram usage:       14 bytes
  2485 ;; Hardware stack levels used:    1
  2486 ;; Hardware stack levels required when called:    2
  2487 ;; This function calls:
  2488 ;;		Nothing
  2489 ;; This function is called by:
  2490 ;;		_PControl
  2491 ;;		_PIDControl
  2492 ;; This function uses a non-reentrant model
  2493 ;;
  2494                           
  2495                           
  2496                           ;psect for function ___fttol
  2497  0358                     ___fttol:	
  2498                           
  2499                           ;incstack = 0
  2500                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  2501  0358  1283               	bcf	3,5	;RP0=0, select bank0
  2502  0359  1303               	bcf	3,6	;RP1=0, select bank0
  2503  035A  0826               	movf	___fttol@f1,w
  2504  035B  00AA               	movwf	??___fttol
  2505  035C  0827               	movf	___fttol@f1+1,w
  2506  035D  00AB               	movwf	??___fttol+1
  2507  035E  0828               	movf	___fttol@f1+2,w
  2508  035F  00AC               	movwf	??___fttol+2
  2509  0360  1003               	clrc
  2510  0361  0D2B               	rlf	??___fttol+1,w
  2511  0362  0D2C               	rlf	??___fttol+2,w
  2512  0363  00AD               	movwf	??___fttol+3
  2513  0364  082D               	movf	??___fttol+3,w
  2514  0365  00B3               	movwf	___fttol@exp1
  2515  0366  08B3               	movf	___fttol@exp1,f
  2516  0367  1D03               	skipz
  2517  0368  2B72               	goto	l1253
  2518  0369  3000               	movlw	0
  2519  036A  00A9               	movwf	?___fttol+3
  2520  036B  3000               	movlw	0
  2521  036C  00A8               	movwf	?___fttol+2
  2522  036D  3000               	movlw	0
  2523  036E  00A7               	movwf	?___fttol+1
  2524  036F  3000               	movlw	0
  2525  0370  00A6               	movwf	?___fttol
  2526  0371  0008               	return
  2527  0372                     l1253:	
  2528  0372  0826               	movf	___fttol@f1,w
  2529  0373  00AA               	movwf	??___fttol
  2530  0374  0827               	movf	___fttol@f1+1,w
  2531  0375  00AB               	movwf	??___fttol+1
  2532  0376  0828               	movf	___fttol@f1+2,w
  2533  0377  00AC               	movwf	??___fttol+2
  2534  0378  3017               	movlw	23
  2535  0379                     u1605:	
  2536  0379  1003               	clrc
  2537  037A  0CAC               	rrf	??___fttol+2,f
  2538  037B  0CAB               	rrf	??___fttol+1,f
  2539  037C  0CAA               	rrf	??___fttol,f
  2540  037D  3EFF               	addlw	-1
  2541  037E  1D03               	skipz
  2542  037F  2B79               	goto	u1605
  2543  0380  082A               	movf	??___fttol,w
  2544  0381  00AD               	movwf	??___fttol+3
  2545  0382  082D               	movf	??___fttol+3,w
  2546  0383  00AE               	movwf	___fttol@sign1
  2547  0384  17A7               	bsf	___fttol@f1+1,7
  2548  0385  30FF               	movlw	255
  2549  0386  05A6               	andwf	___fttol@f1,f
  2550  0387  30FF               	movlw	255
  2551  0388  05A7               	andwf	___fttol@f1+1,f
  2552  0389  3000               	movlw	0
  2553  038A  05A8               	andwf	___fttol@f1+2,f
  2554  038B  0826               	movf	___fttol@f1,w
  2555  038C  00AF               	movwf	___fttol@lval
  2556  038D  0827               	movf	___fttol@f1+1,w
  2557  038E  00B0               	movwf	___fttol@lval+1
  2558  038F  0828               	movf	___fttol@f1+2,w
  2559  0390  00B1               	movwf	___fttol@lval+2
  2560  0391  01B2               	clrf	___fttol@lval+3
  2561  0392  308E               	movlw	142
  2562  0393  02B3               	subwf	___fttol@exp1,f
  2563  0394  1FB3               	btfss	___fttol@exp1,7
  2564  0395  2BB4               	goto	l1273
  2565  0396  0833               	movf	___fttol@exp1,w
  2566  0397  3A80               	xorlw	128
  2567  0398  3E8F               	addlw	143
  2568  0399  1803               	skipnc
  2569  039A  2BA4               	goto	l1271
  2570  039B  3000               	movlw	0
  2571  039C  00A9               	movwf	?___fttol+3
  2572  039D  3000               	movlw	0
  2573  039E  00A8               	movwf	?___fttol+2
  2574  039F  3000               	movlw	0
  2575  03A0  00A7               	movwf	?___fttol+1
  2576  03A1  3000               	movlw	0
  2577  03A2  00A6               	movwf	?___fttol
  2578  03A3  0008               	return
  2579  03A4                     l1271:	
  2580  03A4  3001               	movlw	1
  2581  03A5                     u1635:	
  2582  03A5  1003               	clrc
  2583  03A6  0CB2               	rrf	___fttol@lval+3,f
  2584  03A7  0CB1               	rrf	___fttol@lval+2,f
  2585  03A8  0CB0               	rrf	___fttol@lval+1,f
  2586  03A9  0CAF               	rrf	___fttol@lval,f
  2587  03AA  3EFF               	addlw	-1
  2588  03AB  1D03               	skipz
  2589  03AC  2BA5               	goto	u1635
  2590  03AD  3001               	movlw	1
  2591  03AE  00AA               	movwf	??___fttol
  2592  03AF  082A               	movf	??___fttol,w
  2593  03B0  07B3               	addwf	___fttol@exp1,f
  2594  03B1  1903               	btfsc	3,2
  2595  03B2  2BCF               	goto	l1283
  2596  03B3  2BA4               	goto	l1271
  2597  03B4                     l1273:	
  2598  03B4  3018               	movlw	24
  2599  03B5  0233               	subwf	___fttol@exp1,w
  2600  03B6  1C03               	skipc
  2601  03B7  2BCC               	goto	l1281
  2602  03B8  3000               	movlw	0
  2603  03B9  00A9               	movwf	?___fttol+3
  2604  03BA  3000               	movlw	0
  2605  03BB  00A8               	movwf	?___fttol+2
  2606  03BC  3000               	movlw	0
  2607  03BD  00A7               	movwf	?___fttol+1
  2608  03BE  3000               	movlw	0
  2609  03BF  00A6               	movwf	?___fttol
  2610  03C0  0008               	return
  2611  03C1                     l1279:	
  2612  03C1  3001               	movlw	1
  2613  03C2  00AA               	movwf	??___fttol
  2614  03C3                     u1665:	
  2615  03C3  1003               	clrc
  2616  03C4  0DAF               	rlf	___fttol@lval,f
  2617  03C5  0DB0               	rlf	___fttol@lval+1,f
  2618  03C6  0DB1               	rlf	___fttol@lval+2,f
  2619  03C7  0DB2               	rlf	___fttol@lval+3,f
  2620  03C8  0BAA               	decfsz	??___fttol,f
  2621  03C9  2BC3               	goto	u1665
  2622  03CA  3001               	movlw	1
  2623  03CB  02B3               	subwf	___fttol@exp1,f
  2624  03CC                     l1281:	
  2625  03CC  08B3               	movf	___fttol@exp1,f
  2626  03CD  1D03               	skipz
  2627  03CE  2BC1               	goto	l1279
  2628  03CF                     l1283:	
  2629  03CF  082E               	movf	___fttol@sign1,w
  2630  03D0  1903               	btfsc	3,2
  2631  03D1  2BDD               	goto	l1287
  2632  03D2  09AF               	comf	___fttol@lval,f
  2633  03D3  09B0               	comf	___fttol@lval+1,f
  2634  03D4  09B1               	comf	___fttol@lval+2,f
  2635  03D5  09B2               	comf	___fttol@lval+3,f
  2636  03D6  0AAF               	incf	___fttol@lval,f
  2637  03D7  1903               	skipnz
  2638  03D8  0AB0               	incf	___fttol@lval+1,f
  2639  03D9  1903               	skipnz
  2640  03DA  0AB1               	incf	___fttol@lval+2,f
  2641  03DB  1903               	skipnz
  2642  03DC  0AB2               	incf	___fttol@lval+3,f
  2643  03DD                     l1287:	
  2644  03DD  0832               	movf	___fttol@lval+3,w
  2645  03DE  00A9               	movwf	?___fttol+3
  2646  03DF  0831               	movf	___fttol@lval+2,w
  2647  03E0  00A8               	movwf	?___fttol+2
  2648  03E1  0830               	movf	___fttol@lval+1,w
  2649  03E2  00A7               	movwf	?___fttol+1
  2650  03E3  082F               	movf	___fttol@lval,w
  2651  03E4  00A6               	movwf	?___fttol
  2652  03E5  0008               	return
  2653  03E6                     __end_of___fttol:	
  2654                           
  2655                           	psect	text14
  2656  0286                     __ptext14:	
  2657 ;; *************** function ___ftmul *****************
  2658 ;; Defined at:
  2659 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftmul.c"
  2660 ;; Parameters:    Size  Location     Type
  2661 ;;  f1              3   20[BANK0 ] float 
  2662 ;;  f2              3   23[BANK0 ] float 
  2663 ;; Auto vars:     Size  Location     Type
  2664 ;;  f3_as_produc    3   31[BANK0 ] unsigned um
  2665 ;;  sign            1   35[BANK0 ] unsigned char 
  2666 ;;  cntr            1   34[BANK0 ] unsigned char 
  2667 ;;  exp             1   30[BANK0 ] unsigned char 
  2668 ;; Return value:  Size  Location     Type
  2669 ;;                  3   20[BANK0 ] float 
  2670 ;; Registers used:
  2671 ;;		wreg, status,2, status,0, pclath, cstack
  2672 ;; Tracked objects:
  2673 ;;		On entry : 0/0
  2674 ;;		On exit  : 0/0
  2675 ;;		Unchanged: 0/0
  2676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2677 ;;      Params:         0       6       0       0       0
  2678 ;;      Locals:         0       6       0       0       0
  2679 ;;      Temps:          0       4       0       0       0
  2680 ;;      Totals:         0      16       0       0       0
  2681 ;;Total ram usage:       16 bytes
  2682 ;; Hardware stack levels used:    1
  2683 ;; Hardware stack levels required when called:    3
  2684 ;; This function calls:
  2685 ;;		___ftpack
  2686 ;; This function is called by:
  2687 ;;		_PControl
  2688 ;;		_PIDControl
  2689 ;; This function uses a non-reentrant model
  2690 ;;
  2691                           
  2692                           
  2693                           ;psect for function ___ftmul
  2694  0286                     ___ftmul:	
  2695                           
  2696                           ;incstack = 0
  2697                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  2698  0286  1283               	bcf	3,5	;RP0=0, select bank0
  2699  0287  1303               	bcf	3,6	;RP1=0, select bank0
  2700  0288  0834               	movf	___ftmul@f1,w
  2701  0289  00BA               	movwf	??___ftmul
  2702  028A  0835               	movf	___ftmul@f1+1,w
  2703  028B  00BB               	movwf	??___ftmul+1
  2704  028C  0836               	movf	___ftmul@f1+2,w
  2705  028D  00BC               	movwf	??___ftmul+2
  2706  028E  1003               	clrc
  2707  028F  0D3B               	rlf	??___ftmul+1,w
  2708  0290  0D3C               	rlf	??___ftmul+2,w
  2709  0291  00BD               	movwf	??___ftmul+3
  2710  0292  083D               	movf	??___ftmul+3,w
  2711  0293  00BE               	movwf	___ftmul@exp
  2712  0294  08BE               	movf	___ftmul@exp,f
  2713  0295  1D03               	skipz
  2714  0296  2A9E               	goto	l1665
  2715  0297  3000               	movlw	0
  2716  0298  00B4               	movwf	?___ftmul
  2717  0299  3000               	movlw	0
  2718  029A  00B5               	movwf	?___ftmul+1
  2719  029B  3000               	movlw	0
  2720  029C  00B6               	movwf	?___ftmul+2
  2721  029D  0008               	return
  2722  029E                     l1665:	
  2723  029E  0837               	movf	___ftmul@f2,w
  2724  029F  00BA               	movwf	??___ftmul
  2725  02A0  0838               	movf	___ftmul@f2+1,w
  2726  02A1  00BB               	movwf	??___ftmul+1
  2727  02A2  0839               	movf	___ftmul@f2+2,w
  2728  02A3  00BC               	movwf	??___ftmul+2
  2729  02A4  1003               	clrc
  2730  02A5  0D3B               	rlf	??___ftmul+1,w
  2731  02A6  0D3C               	rlf	??___ftmul+2,w
  2732  02A7  00BD               	movwf	??___ftmul+3
  2733  02A8  083D               	movf	??___ftmul+3,w
  2734  02A9  00C3               	movwf	___ftmul@sign
  2735  02AA  08C3               	movf	___ftmul@sign,f
  2736  02AB  1D03               	skipz
  2737  02AC  2AB4               	goto	l1671
  2738  02AD  3000               	movlw	0
  2739  02AE  00B4               	movwf	?___ftmul
  2740  02AF  3000               	movlw	0
  2741  02B0  00B5               	movwf	?___ftmul+1
  2742  02B1  3000               	movlw	0
  2743  02B2  00B6               	movwf	?___ftmul+2
  2744  02B3  0008               	return
  2745  02B4                     l1671:	
  2746  02B4  0843               	movf	___ftmul@sign,w
  2747  02B5  3E7B               	addlw	123
  2748  02B6  00BA               	movwf	??___ftmul
  2749  02B7  083A               	movf	??___ftmul,w
  2750  02B8  07BE               	addwf	___ftmul@exp,f
  2751  02B9  0834               	movf	___ftmul@f1,w
  2752  02BA  00BA               	movwf	??___ftmul
  2753  02BB  0835               	movf	___ftmul@f1+1,w
  2754  02BC  00BB               	movwf	??___ftmul+1
  2755  02BD  0836               	movf	___ftmul@f1+2,w
  2756  02BE  00BC               	movwf	??___ftmul+2
  2757  02BF  3010               	movlw	16
  2758  02C0                     u2455:	
  2759  02C0  1003               	clrc
  2760  02C1  0CBC               	rrf	??___ftmul+2,f
  2761  02C2  0CBB               	rrf	??___ftmul+1,f
  2762  02C3  0CBA               	rrf	??___ftmul,f
  2763  02C4  3EFF               	addlw	-1
  2764  02C5  1D03               	skipz
  2765  02C6  2AC0               	goto	u2455
  2766  02C7  083A               	movf	??___ftmul,w
  2767  02C8  00BD               	movwf	??___ftmul+3
  2768  02C9  083D               	movf	??___ftmul+3,w
  2769  02CA  00C3               	movwf	___ftmul@sign
  2770  02CB  0837               	movf	___ftmul@f2,w
  2771  02CC  00BA               	movwf	??___ftmul
  2772  02CD  0838               	movf	___ftmul@f2+1,w
  2773  02CE  00BB               	movwf	??___ftmul+1
  2774  02CF  0839               	movf	___ftmul@f2+2,w
  2775  02D0  00BC               	movwf	??___ftmul+2
  2776  02D1  3010               	movlw	16
  2777  02D2                     u2465:	
  2778  02D2  1003               	clrc
  2779  02D3  0CBC               	rrf	??___ftmul+2,f
  2780  02D4  0CBB               	rrf	??___ftmul+1,f
  2781  02D5  0CBA               	rrf	??___ftmul,f
  2782  02D6  3EFF               	addlw	-1
  2783  02D7  1D03               	skipz
  2784  02D8  2AD2               	goto	u2465
  2785  02D9  083A               	movf	??___ftmul,w
  2786  02DA  00BD               	movwf	??___ftmul+3
  2787  02DB  083D               	movf	??___ftmul+3,w
  2788  02DC  06C3               	xorwf	___ftmul@sign,f
  2789  02DD  3080               	movlw	128
  2790  02DE  00BA               	movwf	??___ftmul
  2791  02DF  083A               	movf	??___ftmul,w
  2792  02E0  05C3               	andwf	___ftmul@sign,f
  2793  02E1  17B5               	bsf	___ftmul@f1+1,7
  2794  02E2  17B8               	bsf	___ftmul@f2+1,7
  2795  02E3  30FF               	movlw	255
  2796  02E4  05B7               	andwf	___ftmul@f2,f
  2797  02E5  30FF               	movlw	255
  2798  02E6  05B8               	andwf	___ftmul@f2+1,f
  2799  02E7  3000               	movlw	0
  2800  02E8  05B9               	andwf	___ftmul@f2+2,f
  2801  02E9  3000               	movlw	0
  2802  02EA  00BF               	movwf	___ftmul@f3_as_product
  2803  02EB  3000               	movlw	0
  2804  02EC  00C0               	movwf	___ftmul@f3_as_product+1
  2805  02ED  3000               	movlw	0
  2806  02EE  00C1               	movwf	___ftmul@f3_as_product+2
  2807  02EF  3007               	movlw	7
  2808  02F0  00BA               	movwf	??___ftmul
  2809  02F1  083A               	movf	??___ftmul,w
  2810  02F2  00C2               	movwf	___ftmul@cntr
  2811  02F3                     l1683:	
  2812  02F3  1C34               	btfss	___ftmul@f1,0
  2813  02F4  2B03               	goto	l1687
  2814  02F5  0837               	movf	___ftmul@f2,w
  2815  02F6  07BF               	addwf	___ftmul@f3_as_product,f
  2816  02F7  0838               	movf	___ftmul@f2+1,w
  2817  02F8  1103               	clrz
  2818  02F9  1803               	skipnc
  2819  02FA  0A38               	incf	___ftmul@f2+1,w
  2820  02FB  1D03               	btfss	3,2
  2821  02FC  07C0               	addwf	___ftmul@f3_as_product+1,f
  2822  02FD  0839               	movf	___ftmul@f2+2,w
  2823  02FE  1103               	clrz
  2824  02FF  1803               	skipnc
  2825  0300  0A39               	incf	___ftmul@f2+2,w
  2826  0301  1D03               	btfss	3,2
  2827  0302  07C1               	addwf	___ftmul@f3_as_product+2,f
  2828  0303                     l1687:	
  2829  0303  3001               	movlw	1
  2830  0304                     u2495:	
  2831  0304  1003               	clrc
  2832  0305  0CB6               	rrf	___ftmul@f1+2,f
  2833  0306  0CB5               	rrf	___ftmul@f1+1,f
  2834  0307  0CB4               	rrf	___ftmul@f1,f
  2835  0308  3EFF               	addlw	-1
  2836  0309  1D03               	skipz
  2837  030A  2B04               	goto	u2495
  2838  030B  3001               	movlw	1
  2839  030C                     u2505:	
  2840  030C  1003               	clrc
  2841  030D  0DB7               	rlf	___ftmul@f2,f
  2842  030E  0DB8               	rlf	___ftmul@f2+1,f
  2843  030F  0DB9               	rlf	___ftmul@f2+2,f
  2844  0310  3EFF               	addlw	-1
  2845  0311  1D03               	skipz
  2846  0312  2B0C               	goto	u2505
  2847  0313  3001               	movlw	1
  2848  0314  02C2               	subwf	___ftmul@cntr,f
  2849  0315  1D03               	btfss	3,2
  2850  0316  2AF3               	goto	l1683
  2851  0317  3009               	movlw	9
  2852  0318  00BA               	movwf	??___ftmul
  2853  0319  083A               	movf	??___ftmul,w
  2854  031A  00C2               	movwf	___ftmul@cntr
  2855  031B                     l1695:	
  2856  031B  1C34               	btfss	___ftmul@f1,0
  2857  031C  2B2B               	goto	l1699
  2858  031D  0837               	movf	___ftmul@f2,w
  2859  031E  07BF               	addwf	___ftmul@f3_as_product,f
  2860  031F  0838               	movf	___ftmul@f2+1,w
  2861  0320  1103               	clrz
  2862  0321  1803               	skipnc
  2863  0322  0A38               	incf	___ftmul@f2+1,w
  2864  0323  1D03               	btfss	3,2
  2865  0324  07C0               	addwf	___ftmul@f3_as_product+1,f
  2866  0325  0839               	movf	___ftmul@f2+2,w
  2867  0326  1103               	clrz
  2868  0327  1803               	skipnc
  2869  0328  0A39               	incf	___ftmul@f2+2,w
  2870  0329  1D03               	btfss	3,2
  2871  032A  07C1               	addwf	___ftmul@f3_as_product+2,f
  2872  032B                     l1699:	
  2873  032B  3001               	movlw	1
  2874  032C                     u2545:	
  2875  032C  1003               	clrc
  2876  032D  0CB6               	rrf	___ftmul@f1+2,f
  2877  032E  0CB5               	rrf	___ftmul@f1+1,f
  2878  032F  0CB4               	rrf	___ftmul@f1,f
  2879  0330  3EFF               	addlw	-1
  2880  0331  1D03               	skipz
  2881  0332  2B2C               	goto	u2545
  2882  0333  3001               	movlw	1
  2883  0334                     u2555:	
  2884  0334  1003               	clrc
  2885  0335  0CC1               	rrf	___ftmul@f3_as_product+2,f
  2886  0336  0CC0               	rrf	___ftmul@f3_as_product+1,f
  2887  0337  0CBF               	rrf	___ftmul@f3_as_product,f
  2888  0338  3EFF               	addlw	-1
  2889  0339  1D03               	skipz
  2890  033A  2B34               	goto	u2555
  2891  033B  3001               	movlw	1
  2892  033C  02C2               	subwf	___ftmul@cntr,f
  2893  033D  1D03               	btfss	3,2
  2894  033E  2B1B               	goto	l1695
  2895  033F  083F               	movf	___ftmul@f3_as_product,w
  2896  0340  00A6               	movwf	___ftpack@arg
  2897  0341  0840               	movf	___ftmul@f3_as_product+1,w
  2898  0342  00A7               	movwf	___ftpack@arg+1
  2899  0343  0841               	movf	___ftmul@f3_as_product+2,w
  2900  0344  00A8               	movwf	___ftpack@arg+2
  2901  0345  083E               	movf	___ftmul@exp,w
  2902  0346  00BA               	movwf	??___ftmul
  2903  0347  083A               	movf	??___ftmul,w
  2904  0348  00A9               	movwf	___ftpack@exp
  2905  0349  0843               	movf	___ftmul@sign,w
  2906  034A  00BB               	movwf	??___ftmul+1
  2907  034B  083B               	movf	??___ftmul+1,w
  2908  034C  00AA               	movwf	___ftpack@sign
  2909  034D  118A  2457         	fcall	___ftpack
  2910  034F  1283               	bcf	3,5	;RP0=0, select bank0
  2911  0350  1303               	bcf	3,6	;RP1=0, select bank0
  2912  0351  0826               	movf	?___ftpack,w
  2913  0352  00B4               	movwf	?___ftmul
  2914  0353  0827               	movf	?___ftpack+1,w
  2915  0354  00B5               	movwf	?___ftmul+1
  2916  0355  0828               	movf	?___ftpack+2,w
  2917  0356  00B6               	movwf	?___ftmul+2
  2918  0357  0008               	return
  2919  0358                     __end_of___ftmul:	
  2920                           
  2921                           	psect	text15
  2922  0593                     __ptext15:	
  2923 ;; *************** function ___ftge *****************
  2924 ;; Defined at:
  2925 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftge.c"
  2926 ;; Parameters:    Size  Location     Type
  2927 ;;  ff1             3    6[BANK0 ] float 
  2928 ;;  ff2             3    9[BANK0 ] float 
  2929 ;; Auto vars:     Size  Location     Type
  2930 ;;		None
  2931 ;; Return value:  Size  Location     Type
  2932 ;;		None               void
  2933 ;; Registers used:
  2934 ;;		wreg, status,2, status,0
  2935 ;; Tracked objects:
  2936 ;;		On entry : 0/0
  2937 ;;		On exit  : 0/0
  2938 ;;		Unchanged: 0/0
  2939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2940 ;;      Params:         0       6       0       0       0
  2941 ;;      Locals:         0       0       0       0       0
  2942 ;;      Temps:          0       6       0       0       0
  2943 ;;      Totals:         0      12       0       0       0
  2944 ;;Total ram usage:       12 bytes
  2945 ;; Hardware stack levels used:    1
  2946 ;; Hardware stack levels required when called:    2
  2947 ;; This function calls:
  2948 ;;		Nothing
  2949 ;; This function is called by:
  2950 ;;		_PControl
  2951 ;;		_PIDControl
  2952 ;; This function uses a non-reentrant model
  2953 ;;
  2954                           
  2955                           
  2956                           ;psect for function ___ftge
  2957  0593                     ___ftge:	
  2958                           
  2959                           ;incstack = 0
  2960                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  2961  0593  1283               	bcf	3,5	;RP0=0, select bank0
  2962  0594  1303               	bcf	3,6	;RP1=0, select bank0
  2963  0595  1FA8               	btfss	___ftge@ff1+2,7
  2964  0596  2DBC               	goto	l1181
  2965  0597  3000               	movlw	0
  2966  0598  00AC               	movwf	??___ftge
  2967  0599  3000               	movlw	0
  2968  059A  00AD               	movwf	??___ftge+1
  2969  059B  3080               	movlw	128
  2970  059C  00AE               	movwf	??___ftge+2
  2971  059D  0926               	comf	___ftge@ff1,w
  2972  059E  00AF               	movwf	??___ftge+3
  2973  059F  0927               	comf	___ftge@ff1+1,w
  2974  05A0  00B0               	movwf	??___ftge+4
  2975  05A1  0928               	comf	___ftge@ff1+2,w
  2976  05A2  00B1               	movwf	??___ftge+5
  2977  05A3  0AAF               	incf	??___ftge+3,f
  2978  05A4  1903               	skipnz
  2979  05A5  0AB0               	incf	??___ftge+4,f
  2980  05A6  1903               	skipnz
  2981  05A7  0AB1               	incf	??___ftge+5,f
  2982  05A8  082F               	movf	??___ftge+3,w
  2983  05A9  07AC               	addwf	??___ftge,f
  2984  05AA  0830               	movf	??___ftge+4,w
  2985  05AB  1803               	skipnc
  2986  05AC  0F30               	incfsz	??___ftge+4,w
  2987  05AD  2DAF               	goto	u1411
  2988  05AE  2DB0               	goto	u1412
  2989  05AF                     u1411:	
  2990  05AF  07AD               	addwf	??___ftge+1,f
  2991  05B0                     u1412:	
  2992  05B0  0831               	movf	??___ftge+5,w
  2993  05B1  1803               	skipnc
  2994  05B2  0F31               	incfsz	??___ftge+5,w
  2995  05B3  2DB5               	goto	u1413
  2996  05B4  2DB6               	goto	u1414
  2997  05B5                     u1413:	
  2998  05B5  07AE               	addwf	??___ftge+2,f
  2999  05B6                     u1414:	
  3000  05B6  082C               	movf	??___ftge,w
  3001  05B7  00A6               	movwf	___ftge@ff1
  3002  05B8  082D               	movf	??___ftge+1,w
  3003  05B9  00A7               	movwf	___ftge@ff1+1
  3004  05BA  082E               	movf	??___ftge+2,w
  3005  05BB  00A8               	movwf	___ftge@ff1+2
  3006  05BC                     l1181:	
  3007  05BC  1FAB               	btfss	___ftge@ff2+2,7
  3008  05BD  2DE3               	goto	l1185
  3009  05BE  3000               	movlw	0
  3010  05BF  00AC               	movwf	??___ftge
  3011  05C0  3000               	movlw	0
  3012  05C1  00AD               	movwf	??___ftge+1
  3013  05C2  3080               	movlw	128
  3014  05C3  00AE               	movwf	??___ftge+2
  3015  05C4  0929               	comf	___ftge@ff2,w
  3016  05C5  00AF               	movwf	??___ftge+3
  3017  05C6  092A               	comf	___ftge@ff2+1,w
  3018  05C7  00B0               	movwf	??___ftge+4
  3019  05C8  092B               	comf	___ftge@ff2+2,w
  3020  05C9  00B1               	movwf	??___ftge+5
  3021  05CA  0AAF               	incf	??___ftge+3,f
  3022  05CB  1903               	skipnz
  3023  05CC  0AB0               	incf	??___ftge+4,f
  3024  05CD  1903               	skipnz
  3025  05CE  0AB1               	incf	??___ftge+5,f
  3026  05CF  082F               	movf	??___ftge+3,w
  3027  05D0  07AC               	addwf	??___ftge,f
  3028  05D1  0830               	movf	??___ftge+4,w
  3029  05D2  1803               	skipnc
  3030  05D3  0F30               	incfsz	??___ftge+4,w
  3031  05D4  2DD6               	goto	u1431
  3032  05D5  2DD7               	goto	u1432
  3033  05D6                     u1431:	
  3034  05D6  07AD               	addwf	??___ftge+1,f
  3035  05D7                     u1432:	
  3036  05D7  0831               	movf	??___ftge+5,w
  3037  05D8  1803               	skipnc
  3038  05D9  0F31               	incfsz	??___ftge+5,w
  3039  05DA  2DDC               	goto	u1433
  3040  05DB  2DDD               	goto	u1434
  3041  05DC                     u1433:	
  3042  05DC  07AE               	addwf	??___ftge+2,f
  3043  05DD                     u1434:	
  3044  05DD  082C               	movf	??___ftge,w
  3045  05DE  00A9               	movwf	___ftge@ff2
  3046  05DF  082D               	movf	??___ftge+1,w
  3047  05E0  00AA               	movwf	___ftge@ff2+1
  3048  05E1  082E               	movf	??___ftge+2,w
  3049  05E2  00AB               	movwf	___ftge@ff2+2
  3050  05E3                     l1185:	
  3051  05E3  3080               	movlw	128
  3052  05E4  06A8               	xorwf	___ftge@ff1+2,f
  3053  05E5  3080               	movlw	128
  3054  05E6  06AB               	xorwf	___ftge@ff2+2,f
  3055  05E7  082B               	movf	___ftge@ff2+2,w
  3056  05E8  0228               	subwf	___ftge@ff1+2,w
  3057  05E9  1D03               	skipz
  3058  05EA  0008               	return
  3059  05EB  082A               	movf	___ftge@ff2+1,w
  3060  05EC  0227               	subwf	___ftge@ff1+1,w
  3061  05ED  1D03               	skipz
  3062  05EE  0008               	return
  3063  05EF  0829               	movf	___ftge@ff2,w
  3064  05F0  0226               	subwf	___ftge@ff1,w
  3065  05F1  0008               	return
  3066  05F2                     __end_of___ftge:	
  3067                           
  3068                           	psect	text16
  3069  06F7                     __ptext16:	
  3070 ;; *************** function ___awtoft *****************
  3071 ;; Defined at:
  3072 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awtoft.c"
  3073 ;; Parameters:    Size  Location     Type
  3074 ;;  c               2   14[BANK0 ] int 
  3075 ;; Auto vars:     Size  Location     Type
  3076 ;;  sign            1   19[BANK0 ] unsigned char 
  3077 ;; Return value:  Size  Location     Type
  3078 ;;                  3   14[BANK0 ] float 
  3079 ;; Registers used:
  3080 ;;		wreg, status,2, status,0, pclath, cstack
  3081 ;; Tracked objects:
  3082 ;;		On entry : 0/0
  3083 ;;		On exit  : 0/0
  3084 ;;		Unchanged: 0/0
  3085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3086 ;;      Params:         0       3       0       0       0
  3087 ;;      Locals:         0       1       0       0       0
  3088 ;;      Temps:          0       2       0       0       0
  3089 ;;      Totals:         0       6       0       0       0
  3090 ;;Total ram usage:        6 bytes
  3091 ;; Hardware stack levels used:    1
  3092 ;; Hardware stack levels required when called:    3
  3093 ;; This function calls:
  3094 ;;		___ftpack
  3095 ;; This function is called by:
  3096 ;;		_PControl
  3097 ;;		_PIDControl
  3098 ;; This function uses a non-reentrant model
  3099 ;;
  3100                           
  3101                           
  3102                           ;psect for function ___awtoft
  3103  06F7                     ___awtoft:	
  3104                           
  3105                           ;incstack = 0
  3106                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  3107  06F7  1283               	bcf	3,5	;RP0=0, select bank0
  3108  06F8  1303               	bcf	3,6	;RP1=0, select bank0
  3109  06F9  01B3               	clrf	___awtoft@sign
  3110  06FA  1FAF               	btfss	___awtoft@c+1,7
  3111  06FB  2F03               	goto	l1583
  3112  06FC  09AE               	comf	___awtoft@c,f
  3113  06FD  09AF               	comf	___awtoft@c+1,f
  3114  06FE  0AAE               	incf	___awtoft@c,f
  3115  06FF  1903               	skipnz
  3116  0700  0AAF               	incf	___awtoft@c+1,f
  3117  0701  01B3               	clrf	___awtoft@sign
  3118  0702  0AB3               	incf	___awtoft@sign,f
  3119  0703                     l1583:	
  3120  0703  082E               	movf	___awtoft@c,w
  3121  0704  00A6               	movwf	___ftpack@arg
  3122  0705  082F               	movf	___awtoft@c+1,w
  3123  0706  00A7               	movwf	___ftpack@arg+1
  3124  0707  01A8               	clrf	___ftpack@arg+2
  3125  0708  308E               	movlw	142
  3126  0709  00B1               	movwf	??___awtoft
  3127  070A  0831               	movf	??___awtoft,w
  3128  070B  00A9               	movwf	___ftpack@exp
  3129  070C  0833               	movf	___awtoft@sign,w
  3130  070D  00B2               	movwf	??___awtoft+1
  3131  070E  0832               	movf	??___awtoft+1,w
  3132  070F  00AA               	movwf	___ftpack@sign
  3133  0710  118A  2457         	fcall	___ftpack
  3134  0712  1283               	bcf	3,5	;RP0=0, select bank0
  3135  0713  1303               	bcf	3,6	;RP1=0, select bank0
  3136  0714  0826               	movf	?___ftpack,w
  3137  0715  00AE               	movwf	?___awtoft
  3138  0716  0827               	movf	?___ftpack+1,w
  3139  0717  00AF               	movwf	?___awtoft+1
  3140  0718  0828               	movf	?___ftpack+2,w
  3141  0719  00B0               	movwf	?___awtoft+2
  3142  071A  0008               	return
  3143  071B                     __end_of___awtoft:	
  3144                           
  3145                           	psect	text17
  3146  0457                     __ptext17:	
  3147 ;; *************** function ___ftpack *****************
  3148 ;; Defined at:
  3149 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
  3150 ;; Parameters:    Size  Location     Type
  3151 ;;  arg             3    6[BANK0 ] unsigned um
  3152 ;;  exp             1    9[BANK0 ] unsigned char 
  3153 ;;  sign            1   10[BANK0 ] unsigned char 
  3154 ;; Auto vars:     Size  Location     Type
  3155 ;;		None
  3156 ;; Return value:  Size  Location     Type
  3157 ;;                  3    6[BANK0 ] float 
  3158 ;; Registers used:
  3159 ;;		wreg, status,2, status,0
  3160 ;; Tracked objects:
  3161 ;;		On entry : 0/0
  3162 ;;		On exit  : 0/0
  3163 ;;		Unchanged: 0/0
  3164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3165 ;;      Params:         0       5       0       0       0
  3166 ;;      Locals:         0       0       0       0       0
  3167 ;;      Temps:          0       3       0       0       0
  3168 ;;      Totals:         0       8       0       0       0
  3169 ;;Total ram usage:        8 bytes
  3170 ;; Hardware stack levels used:    1
  3171 ;; Hardware stack levels required when called:    2
  3172 ;; This function calls:
  3173 ;;		Nothing
  3174 ;; This function is called by:
  3175 ;;		___awtoft
  3176 ;;		___ftadd
  3177 ;;		___ftmul
  3178 ;; This function uses a non-reentrant model
  3179 ;;
  3180                           
  3181                           
  3182                           ;psect for function ___ftpack
  3183  0457                     ___ftpack:	
  3184                           
  3185                           ;incstack = 0
  3186                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  3187  0457  1283               	bcf	3,5	;RP0=0, select bank0
  3188  0458  1303               	bcf	3,6	;RP1=0, select bank0
  3189  0459  0829               	movf	___ftpack@exp,w
  3190  045A  1903               	btfsc	3,2
  3191  045B  2C61               	goto	l1549
  3192  045C  0828               	movf	___ftpack@arg+2,w
  3193  045D  0427               	iorwf	___ftpack@arg+1,w
  3194  045E  0426               	iorwf	___ftpack@arg,w
  3195  045F  1D03               	skipz
  3196  0460  2C74               	goto	l1555
  3197  0461                     l1549:	
  3198  0461  3000               	movlw	0
  3199  0462  00A6               	movwf	?___ftpack
  3200  0463  3000               	movlw	0
  3201  0464  00A7               	movwf	?___ftpack+1
  3202  0465  3000               	movlw	0
  3203  0466  00A8               	movwf	?___ftpack+2
  3204  0467  0008               	return
  3205  0468                     l1553:	
  3206  0468  3001               	movlw	1
  3207  0469  00AB               	movwf	??___ftpack
  3208  046A  082B               	movf	??___ftpack,w
  3209  046B  07A9               	addwf	___ftpack@exp,f
  3210  046C  3001               	movlw	1
  3211  046D                     u2095:	
  3212  046D  1003               	clrc
  3213  046E  0CA8               	rrf	___ftpack@arg+2,f
  3214  046F  0CA7               	rrf	___ftpack@arg+1,f
  3215  0470  0CA6               	rrf	___ftpack@arg,f
  3216  0471  3EFF               	addlw	-1
  3217  0472  1D03               	skipz
  3218  0473  2C6D               	goto	u2095
  3219  0474                     l1555:	
  3220  0474  30FE               	movlw	254
  3221  0475  0528               	andwf	___ftpack@arg+2,w
  3222  0476  1903               	btfsc	3,2
  3223  0477  2C8F               	goto	l353
  3224  0478  2C68               	goto	l1553
  3225  0479                     l1557:	
  3226  0479  3001               	movlw	1
  3227  047A  00AB               	movwf	??___ftpack
  3228  047B  082B               	movf	??___ftpack,w
  3229  047C  07A9               	addwf	___ftpack@exp,f
  3230  047D  3001               	movlw	1
  3231  047E  07A6               	addwf	___ftpack@arg,f
  3232  047F  3000               	movlw	0
  3233  0480  1803               	skipnc
  3234  0481  3001               	movlw	1
  3235  0482  07A7               	addwf	___ftpack@arg+1,f
  3236  0483  3000               	movlw	0
  3237  0484  1803               	skipnc
  3238  0485  3001               	movlw	1
  3239  0486  07A8               	addwf	___ftpack@arg+2,f
  3240  0487  3001               	movlw	1
  3241  0488                     u2115:	
  3242  0488  1003               	clrc
  3243  0489  0CA8               	rrf	___ftpack@arg+2,f
  3244  048A  0CA7               	rrf	___ftpack@arg+1,f
  3245  048B  0CA6               	rrf	___ftpack@arg,f
  3246  048C  3EFF               	addlw	-1
  3247  048D  1D03               	skipz
  3248  048E  2C88               	goto	u2115
  3249  048F                     l353:	
  3250  048F  30FF               	movlw	255
  3251  0490  0528               	andwf	___ftpack@arg+2,w
  3252  0491  1903               	btfsc	3,2
  3253  0492  2C9E               	goto	l1565
  3254  0493  2C79               	goto	l1557
  3255  0494                     l1563:	
  3256  0494  3001               	movlw	1
  3257  0495  02A9               	subwf	___ftpack@exp,f
  3258  0496  3001               	movlw	1
  3259  0497                     u2135:	
  3260  0497  1003               	clrc
  3261  0498  0DA6               	rlf	___ftpack@arg,f
  3262  0499  0DA7               	rlf	___ftpack@arg+1,f
  3263  049A  0DA8               	rlf	___ftpack@arg+2,f
  3264  049B  3EFF               	addlw	-1
  3265  049C  1D03               	skipz
  3266  049D  2C97               	goto	u2135
  3267  049E                     l1565:	
  3268  049E  1FA7               	btfss	___ftpack@arg+1,7
  3269  049F  2C94               	goto	l1563
  3270  04A0  1829               	btfsc	___ftpack@exp,0
  3271  04A1  2CA8               	goto	l359
  3272  04A2  30FF               	movlw	255
  3273  04A3  05A6               	andwf	___ftpack@arg,f
  3274  04A4  307F               	movlw	127
  3275  04A5  05A7               	andwf	___ftpack@arg+1,f
  3276  04A6  30FF               	movlw	255
  3277  04A7  05A8               	andwf	___ftpack@arg+2,f
  3278  04A8                     l359:	
  3279  04A8  1003               	clrc
  3280  04A9  0CA9               	rrf	___ftpack@exp,f
  3281  04AA  0829               	movf	___ftpack@exp,w
  3282  04AB  00AB               	movwf	??___ftpack
  3283  04AC  01AC               	clrf	??___ftpack+1
  3284  04AD  01AD               	clrf	??___ftpack+2
  3285  04AE  3010               	movlw	16
  3286  04AF                     u2165:	
  3287  04AF  1003               	clrc
  3288  04B0  0DAB               	rlf	??___ftpack,f
  3289  04B1  0DAC               	rlf	??___ftpack+1,f
  3290  04B2  0DAD               	rlf	??___ftpack+2,f
  3291  04B3  3EFF               	addlw	-1
  3292  04B4  1D03               	skipz
  3293  04B5  2CAF               	goto	u2165
  3294  04B6  082B               	movf	??___ftpack,w
  3295  04B7  04A6               	iorwf	___ftpack@arg,f
  3296  04B8  082C               	movf	??___ftpack+1,w
  3297  04B9  04A7               	iorwf	___ftpack@arg+1,f
  3298  04BA  082D               	movf	??___ftpack+2,w
  3299  04BB  04A8               	iorwf	___ftpack@arg+2,f
  3300  04BC  082A               	movf	___ftpack@sign,w
  3301  04BD  1903               	btfsc	3,2
  3302  04BE  0008               	return
  3303  04BF  17A8               	bsf	___ftpack@arg+2,7
  3304  04C0  0008               	return
  3305  04C1                     __end_of___ftpack:	
  3306                           
  3307                           	psect	text18
  3308  068E                     __ptext18:	
  3309 ;; *************** function _isrAD *****************
  3310 ;; Defined at:
  3311 ;;		line 222 in file "C:\Users\Robert Kydd\Documents\Personal\HW\Mechatronics\CS5 V2\CS5_Group16.c"
  3312 ;; Parameters:    Size  Location     Type
  3313 ;;		None
  3314 ;; Auto vars:     Size  Location     Type
  3315 ;;		None
  3316 ;; Return value:  Size  Location     Type
  3317 ;;		None               void
  3318 ;; Registers used:
  3319 ;;		wreg, status,2, status,0, pclath, cstack
  3320 ;; Tracked objects:
  3321 ;;		On entry : 0/0
  3322 ;;		On exit  : 0/0
  3323 ;;		Unchanged: 0/0
  3324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3325 ;;      Params:         0       0       0       0       0
  3326 ;;      Locals:         0       0       0       0       0
  3327 ;;      Temps:          0       6       0       0       0
  3328 ;;      Totals:         0       6       0       0       0
  3329 ;;Total ram usage:        6 bytes
  3330 ;; Hardware stack levels used:    1
  3331 ;; Hardware stack levels required when called:    1
  3332 ;; This function calls:
  3333 ;;		___awdiv
  3334 ;; This function is called by:
  3335 ;;		Interrupt level 1
  3336 ;; This function uses a non-reentrant model
  3337 ;;
  3338                           
  3339                           
  3340                           ;psect for function _isrAD
  3341  068E                     _isrAD:	
  3342                           
  3343                           ;CS5_Group16.c: 224: Speed = Speed + ADRESH;
  3344  068E  081E               	movf	30,w	;volatile
  3345  068F  074E               	addwf	_Speed,w
  3346  0690  00A0               	movwf	??_isrAD
  3347  0691  084F               	movf	_Speed+1,w
  3348  0692  1803               	skipnc
  3349  0693  0A4F               	incf	_Speed+1,w
  3350  0694  00A1               	movwf	??_isrAD+1
  3351  0695  0820               	movf	??_isrAD,w
  3352  0696  00CE               	movwf	_Speed
  3353  0697  0821               	movf	??_isrAD+1,w
  3354  0698  00CF               	movwf	_Speed+1
  3355                           
  3356                           ;CS5_Group16.c: 225: Count = Count + 1;
  3357  0699  0879               	movf	_Count,w
  3358  069A  3E01               	addlw	1
  3359  069B  00F9               	movwf	_Count
  3360  069C  087A               	movf	_Count+1,w
  3361  069D  1803               	skipnc
  3362  069E  3E01               	addlw	1
  3363  069F  3E00               	addlw	0
  3364  06A0  00FA               	movwf	_Count+1
  3365                           
  3366                           ;CS5_Group16.c: 227: if(Count == 64)
  3367  06A1  3040               	movlw	64
  3368  06A2  0679               	xorwf	_Count,w
  3369  06A3  047A               	iorwf	_Count+1,w
  3370  06A4  1D03               	skipz
  3371  06A5  2EBF               	goto	i1l1521
  3372                           
  3373                           ;CS5_Group16.c: 228: {
  3374                           ;CS5_Group16.c: 229: aSpeed = Speed/64;
  3375  06A6  3040               	movlw	64
  3376  06A7  00F0               	movwf	___awdiv@divisor
  3377  06A8  3000               	movlw	0
  3378  06A9  00F1               	movwf	___awdiv@divisor+1
  3379  06AA  084F               	movf	_Speed+1,w
  3380  06AB  01F3               	clrf	___awdiv@dividend+1
  3381  06AC  07F3               	addwf	___awdiv@dividend+1,f
  3382  06AD  084E               	movf	_Speed,w
  3383  06AE  01F2               	clrf	___awdiv@dividend
  3384  06AF  07F2               	addwf	___awdiv@dividend,f
  3385  06B0  118A  25F2  118A   	fcall	___awdiv
  3386  06B3  0871               	movf	?___awdiv+1,w
  3387  06B4  1283               	bcf	3,5	;RP0=0, select bank0
  3388  06B5  1303               	bcf	3,6	;RP1=0, select bank0
  3389  06B6  01D1               	clrf	_aSpeed+1
  3390  06B7  07D1               	addwf	_aSpeed+1,f
  3391  06B8  0870               	movf	?___awdiv,w
  3392  06B9  01D0               	clrf	_aSpeed
  3393  06BA  07D0               	addwf	_aSpeed,f
  3394                           
  3395                           ;CS5_Group16.c: 230: Count = 0;
  3396  06BB  01F9               	clrf	_Count
  3397  06BC  01FA               	clrf	_Count+1
  3398                           
  3399                           ;CS5_Group16.c: 231: Speed = 0;
  3400  06BD  01CE               	clrf	_Speed
  3401  06BE  01CF               	clrf	_Speed+1
  3402  06BF                     i1l1521:	
  3403                           
  3404                           ;CS5_Group16.c: 232: }
  3405                           ;CS5_Group16.c: 234: ADIF = 0;
  3406  06BF  130C               	bcf	12,6	;volatile
  3407                           
  3408                           ;CS5_Group16.c: 235: GO = 1;
  3409  06C0  151F               	bsf	31,2	;volatile
  3410  06C1  0825               	movf	??_isrAD+5,w
  3411  06C2  00FF               	movwf	127
  3412  06C3  0824               	movf	??_isrAD+4,w
  3413  06C4  008A               	movwf	10
  3414  06C5  0823               	movf	??_isrAD+3,w
  3415  06C6  0084               	movwf	4
  3416  06C7  0E22               	swapf	(??_isrAD+2)^0,w
  3417  06C8  0083               	movwf	3
  3418  06C9  0EFE               	swapf	126,f
  3419  06CA  0E7E               	swapf	126,w
  3420  06CB  0009               	retfie
  3421  06CC                     __end_of_isrAD:	
  3422                           
  3423                           	psect	intentry
  3424  0004                     __pintentry:	
  3425                           ;incstack = 0
  3426                           ; Regs used in _isrAD: [wreg+status,2+status,0+pclath+cstack]
  3427                           
  3428  0004                     interrupt_function:	
  3429  007E                     saved_w	set	btemp
  3430  0004  00FE               	movwf	btemp
  3431  0005  0E03               	swapf	3,w
  3432  0006  1283               	bcf	3,5	;RP0=0, select bank0
  3433  0007  1303               	bcf	3,6	;RP1=0, select bank0
  3434  0008  00A2               	movwf	??_isrAD+2
  3435  0009  0804               	movf	4,w
  3436  000A  00A3               	movwf	??_isrAD+3
  3437  000B  080A               	movf	10,w
  3438  000C  00A4               	movwf	??_isrAD+4
  3439  000D  087F               	movf	btemp+1,w
  3440  000E  00A5               	movwf	??_isrAD+5
  3441  000F  118A  2E8E         	ljmp	_isrAD
  3442                           
  3443                           	psect	text19
  3444  05F2                     __ptext19:	
  3445 ;; *************** function ___awdiv *****************
  3446 ;; Defined at:
  3447 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awdiv.c"
  3448 ;; Parameters:    Size  Location     Type
  3449 ;;  divisor         2    0[COMMON] int 
  3450 ;;  dividend        2    2[COMMON] int 
  3451 ;; Auto vars:     Size  Location     Type
  3452 ;;  quotient        2    7[COMMON] int 
  3453 ;;  sign            1    6[COMMON] unsigned char 
  3454 ;;  counter         1    5[COMMON] unsigned char 
  3455 ;; Return value:  Size  Location     Type
  3456 ;;                  2    0[COMMON] int 
  3457 ;; Registers used:
  3458 ;;		wreg, status,2, status,0
  3459 ;; Tracked objects:
  3460 ;;		On entry : 0/0
  3461 ;;		On exit  : 0/0
  3462 ;;		Unchanged: 0/0
  3463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3464 ;;      Params:         4       0       0       0       0
  3465 ;;      Locals:         4       0       0       0       0
  3466 ;;      Temps:          1       0       0       0       0
  3467 ;;      Totals:         9       0       0       0       0
  3468 ;;Total ram usage:        9 bytes
  3469 ;; Hardware stack levels used:    1
  3470 ;; This function calls:
  3471 ;;		Nothing
  3472 ;; This function is called by:
  3473 ;;		_isrAD
  3474 ;; This function uses a non-reentrant model
  3475 ;;
  3476                           
  3477                           
  3478                           ;psect for function ___awdiv
  3479  05F2                     ___awdiv:	
  3480                           
  3481                           ;incstack = 0
  3482                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3483  05F2  01F6               	clrf	___awdiv@sign
  3484  05F3  1FF1               	btfss	___awdiv@divisor+1,7
  3485  05F4  2DFC               	goto	i1l1473
  3486  05F5  09F0               	comf	___awdiv@divisor,f
  3487  05F6  09F1               	comf	___awdiv@divisor+1,f
  3488  05F7  0AF0               	incf	___awdiv@divisor,f
  3489  05F8  1903               	skipnz
  3490  05F9  0AF1               	incf	___awdiv@divisor+1,f
  3491  05FA  01F6               	clrf	___awdiv@sign
  3492  05FB  0AF6               	incf	___awdiv@sign,f
  3493  05FC                     i1l1473:	
  3494  05FC  1FF3               	btfss	___awdiv@dividend+1,7
  3495  05FD  2E07               	goto	i1l1479
  3496  05FE  09F2               	comf	___awdiv@dividend,f
  3497  05FF  09F3               	comf	___awdiv@dividend+1,f
  3498  0600  0AF2               	incf	___awdiv@dividend,f
  3499  0601  1903               	skipnz
  3500  0602  0AF3               	incf	___awdiv@dividend+1,f
  3501  0603  3001               	movlw	1
  3502  0604  00F4               	movwf	??___awdiv
  3503  0605  0874               	movf	??___awdiv,w
  3504  0606  06F6               	xorwf	___awdiv@sign,f
  3505  0607                     i1l1479:	
  3506  0607  01F7               	clrf	___awdiv@quotient
  3507  0608  01F8               	clrf	___awdiv@quotient+1
  3508  0609  0871               	movf	___awdiv@divisor+1,w
  3509  060A  0470               	iorwf	___awdiv@divisor,w
  3510  060B  1903               	skipnz
  3511  060C  2E3E               	goto	i1l1501
  3512  060D  01F5               	clrf	___awdiv@counter
  3513  060E  0AF5               	incf	___awdiv@counter,f
  3514  060F                     i1l1489:	
  3515  060F  1BF1               	btfsc	___awdiv@divisor+1,7
  3516  0610  2E1D               	goto	i1l1491
  3517  0611  3001               	movlw	1
  3518  0612                     u193_25:	
  3519  0612  1003               	clrc
  3520  0613  0DF0               	rlf	___awdiv@divisor,f
  3521  0614  0DF1               	rlf	___awdiv@divisor+1,f
  3522  0615  3EFF               	addlw	-1
  3523  0616  1D03               	skipz
  3524  0617  2E12               	goto	u193_25
  3525  0618  3001               	movlw	1
  3526  0619  00F4               	movwf	??___awdiv
  3527  061A  0874               	movf	??___awdiv,w
  3528  061B  07F5               	addwf	___awdiv@counter,f
  3529  061C  2E0F               	goto	i1l1489
  3530  061D                     i1l1491:	
  3531  061D  3001               	movlw	1
  3532  061E                     u195_25:	
  3533  061E  1003               	clrc
  3534  061F  0DF7               	rlf	___awdiv@quotient,f
  3535  0620  0DF8               	rlf	___awdiv@quotient+1,f
  3536  0621  3EFF               	addlw	-1
  3537  0622  1D03               	skipz
  3538  0623  2E1E               	goto	u195_25
  3539  0624  0871               	movf	___awdiv@divisor+1,w
  3540  0625  0273               	subwf	___awdiv@dividend+1,w
  3541  0626  1D03               	skipz
  3542  0627  2E2A               	goto	u196_25
  3543  0628  0870               	movf	___awdiv@divisor,w
  3544  0629  0272               	subwf	___awdiv@dividend,w
  3545  062A                     u196_25:	
  3546  062A  1C03               	skipc
  3547  062B  2E33               	goto	i1l1497
  3548  062C  0870               	movf	___awdiv@divisor,w
  3549  062D  02F2               	subwf	___awdiv@dividend,f
  3550  062E  0871               	movf	___awdiv@divisor+1,w
  3551  062F  1C03               	skipc
  3552  0630  03F3               	decf	___awdiv@dividend+1,f
  3553  0631  02F3               	subwf	___awdiv@dividend+1,f
  3554  0632  1477               	bsf	___awdiv@quotient,0
  3555  0633                     i1l1497:	
  3556  0633  3001               	movlw	1
  3557  0634                     u197_25:	
  3558  0634  1003               	clrc
  3559  0635  0CF1               	rrf	___awdiv@divisor+1,f
  3560  0636  0CF0               	rrf	___awdiv@divisor,f
  3561  0637  3EFF               	addlw	-1
  3562  0638  1D03               	skipz
  3563  0639  2E34               	goto	u197_25
  3564  063A  3001               	movlw	1
  3565  063B  02F5               	subwf	___awdiv@counter,f
  3566  063C  1D03               	btfss	3,2
  3567  063D  2E1D               	goto	i1l1491
  3568  063E                     i1l1501:	
  3569  063E  0876               	movf	___awdiv@sign,w
  3570  063F  1903               	btfsc	3,2
  3571  0640  2E46               	goto	i1l1505
  3572  0641  09F7               	comf	___awdiv@quotient,f
  3573  0642  09F8               	comf	___awdiv@quotient+1,f
  3574  0643  0AF7               	incf	___awdiv@quotient,f
  3575  0644  1903               	skipnz
  3576  0645  0AF8               	incf	___awdiv@quotient+1,f
  3577  0646                     i1l1505:	
  3578  0646  0878               	movf	___awdiv@quotient+1,w
  3579  0647  01F1               	clrf	?___awdiv+1
  3580  0648  07F1               	addwf	?___awdiv+1,f
  3581  0649  0877               	movf	___awdiv@quotient,w
  3582  064A  01F0               	clrf	?___awdiv
  3583  064B  07F0               	addwf	?___awdiv,f
  3584  064C  0008               	return
  3585  064D                     __end_of___awdiv:	
  3586  007E                     btemp	set	126	;btemp
  3587  007E                     wtemp	set	126
  3588  007E                     wtemp0	set	126
  3589  0080                     wtemp1	set	128
  3590  0082                     wtemp2	set	130
  3591  0084                     wtemp3	set	132
  3592  0086                     wtemp4	set	134
  3593  0088                     wtemp5	set	136
  3594  007F                     wtemp6	set	127
  3595  007E                     ttemp	set	126
  3596  007E                     ttemp0	set	126
  3597  0081                     ttemp1	set	129
  3598  0084                     ttemp2	set	132
  3599  0087                     ttemp3	set	135
  3600  007F                     ttemp4	set	127
  3601  007E                     ltemp	set	126
  3602  007E                     ltemp0	set	126
  3603  0082                     ltemp1	set	130
  3604  0086                     ltemp2	set	134
  3605  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         19
    Persistent  16
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      14
    BANK0            80     46      73
    BANK1            80      5       8
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isrAD in COMMON

    _isrAD->___awdiv

Critical Paths under _main in BANK0

    _indexMotor->_PControl
    _PIDControl->___ftadd
    ___ftadd->___ftmul
    _Mode0->_PControl
    _brakeFlash->_flashDelay
    _PControl->___ftmul
    ___ftmul->___awtoft
    ___awtoft->___ftpack

Critical Paths under _isrAD in BANK0

    None.

Critical Paths under _main in BANK1

    _Mode3->_PIDControl
    _PIDControl->___ftadd

Critical Paths under _isrAD in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isrAD in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isrAD in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   19068
                              _Mode0
                              _Mode3
                        _SwitchDelay
                         _indexMotor
                       _initAtoD_PWM
                           _initPort
 ---------------------------------------------------------------------------------
 (1) _initPort                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initAtoD_PWM                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _indexMotor                                           0     0      0    5315
                           _PControl
 ---------------------------------------------------------------------------------
 (1) _SwitchDelay                                          2     2      0       0
                                              6 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _Mode3                                                0     0      0    8438
                         _PIDControl
                         _brakeFlash
                            _countUp
 ---------------------------------------------------------------------------------
 (2) _PIDControl                                           2     2      0    8438
                                              3 BANK1      2     2      0
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    3123
                                             36 BANK0     10     4      6
                                              0 BANK1      3     3      0
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _Mode0                                                0     0      0    5315
                           _PControl
                         _brakeFlash
                            _countUp
 ---------------------------------------------------------------------------------
 (2) _countUp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _brakeFlash                                           0     0      0       0
                         _flashDelay
 ---------------------------------------------------------------------------------
 (3) _flashDelay                                           3     3      0       0
                                              6 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _PControl                                             2     2      0    5315
                                             36 BANK0      2     2      0
                           ___awtoft
                             ___ftge
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             14    10      4     338
                                              6 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    2534
                                             20 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftge                                              12     6      6     480
                                              6 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    1963
                                             14 BANK0      6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1614
                                              6 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isrAD                                                6     6      0     386
                                              0 BANK0      6     6      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              9     5      4     386
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Mode0
     _PControl
       ___awtoft
         ___ftpack
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
     _brakeFlash
       _flashDelay
     _countUp
   _Mode3
     _PIDControl
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
     _brakeFlash
       _flashDelay
     _countUp
   _SwitchDelay
   _indexMotor
     _PControl
       ___awtoft
         ___ftpack
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___fttol
   _initAtoD_PWM
   _initPort

 _isrAD (ROOT)
   ___awdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      5F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2E      49       5       91.3%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
DATA                 0      0      5F       6        0.0%
BITBANK1            50      0       0       7        0.0%
BANK1               50      5       8       8       10.0%
BITBANK3            60      0       0       9        0.0%
BANK3               60      0       0      10        0.0%
BITBANK2            60      0       0      11        0.0%
BANK2               60      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Sat Dec 15 15:51:42 2018

                      _i 007B              __CFG_CP$OFF 0000                       _GO 00FA  
           ___awdiv@sign 0076                       fsr 0004             ___ftadd@exp1 00A2  
           ___ftadd@exp2 00A1             ___ftadd@sign 00A0                      l105 078F  
                    l128 0752                      l180 0724                      l182 0728  
                    l353 048F                      l372 007D                      l373 0083  
                    l382 00F7                      l359 04A8                      _GIE 005F  
                    _RC4 003C                      _RC5 003D                      _PR2 0092  
                    _K_d 00A5                      _K_i 005C                      _K_p 005F  
                    fsr0 0004                      indf 0000             __CFG_BORV$20 0000  
           __CFG_FOSC$HS 0000                     l1307 06EB                     l1181 05BC  
                   l1253 0372                     l1271 03A4                     l1185 05E3  
                   l1281 03CC                     l1273 03B4                     l1283 03CF  
                   l1605 006F                     l1287 03DD                     l1279 03C1  
                   l1295 06D0                     l1623 00B1                     l1553 0468  
                   l1297 06D6                     l1641 010B                     l1625 00C1  
                   l1617 0098                     l1563 0494                     l1555 0474  
                   l1723 0448                     l1635 00E3                     l1627 00C6  
                   l1565 049E                     l1557 0479                     l1549 0461  
                   l1645 0121                     l1637 00F3                     l1629 00CA  
                   l1813 0502                     l1805 04EB                     l1583 0703  
                   l1671 02B4                     l1719 0431                     l1655 014A  
                   l1743 0277                     l1815 0516                     l1807 04F1  
                   l1665 029E                     l1683 02F3                     l1763 052E  
                   l1595 0054                     l1739 0260                     l1755 073E  
                   l1781 056B                     l1773 0554                     l1765 0542  
                   l1757 075D                     l1837 0735                     l1695 031B  
                   l1687 0303                     l1783 057F                     l1775 055A  
                   l1599 005C                     l1699 032B                     l1795 04C5  
                   l1797 04D9                     _ADIE 0466                     _ADIF 0066  
                   u2115 0488                     u1411 05AF                     u1412 05B0  
                   u1413 05B5                     u1414 05B6                     u2135 0497  
                   u1431 05D6                     u1432 05D7                     u1433 05DC  
                   u1434 05DD                     u2315 00B2                     u2165 04AF  
                   u1605 0379                     u2095 046D                     u2505 030C  
                   u1705 06F4                     u2345 00CB                     u1635 03A5  
                   u2285 0099                     u2455 02C0                     u2375 00E4  
                   u2545 032C                     u2465 02D2                     u1665 03C3  
                   u2555 0334                     u2715 04FC                     u2635 0749  
                   u2645 0539                     u2725 050D                     u2495 0304  
                   u2807 07A0                     u2817 0783                     u2665 0565  
                   u2675 0576                     _PEIE 005E                     u2695 04D0  
                   _vRef 0067                     _main 071B             ___ftpack@arg 0026  
                   _duty 0062             ___ftpack@exp 0029                     btemp 007E  
                   ltemp 007E                     start 0011              ?_PIDControl 0070  
                   ttemp 007E                     wtemp 007E            __CFG_IESO$OFF 0000  
          __CFG_MCLRE$ON 0000             ___ftmul@cntr 0042             ___ftmul@sign 0043  
           ___fttol@exp1 0033             ___fttol@lval 002F                    ?_main 0070  
        __end_of___awdiv 064D          __end_of___ftadd 016C            __CFG_WDTE$OFF 0000  
        __end_of___ftmul 0358          ___awdiv@divisor 0070          __end_of___fttol 03E6  
                  _T2CON 0012           __CFG_DEBUG$OFF 0000          ___awdiv@counter 0075  
                  _PORTB 0006                    _PORTC 0007                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087            __CFG_PWRTE$ON 0000  
                  _Count 0079                    _Mode0 052A                    _Mode3 04C1  
         __CFG_FCMEN$OFF 0000                    _Speed 004E                    _State 007D  
          ___awtoft@sign 0033          __end_of_countUp 079A                    _brake 0039  
                  _isrAD 068E            ___ftpack@sign 002A           __CFG_BOREN$OFF 0000  
                  pclath 000A                    ltemp0 007E                    ltemp1 0082  
                  ltemp2 0086                    ltemp3 0080                    ttemp0 007E  
                  ttemp1 0081                    ttemp2 0084                    ttemp3 0087  
                  ttemp4 007F                    status 0003         __end_of_PControl 0457  
                  wtemp0 007E                    wtemp1 0080                    wtemp2 0082  
                  wtemp3 0084                    wtemp4 0086                    wtemp5 0088  
                  wtemp6 007F            ?_initAtoD_PWM 0070          __initialization 0013  
           __end_of_main 073E                   ??_main 004E            ___fttol@sign1 002E  
                 ?_Mode0 0070      __size_of_PIDControl 011A                   ?_Mode3 0070  
                 _ADCON0 001F                   _ADCON1 009F                   ?_isrAD 0070  
                 _ADRESH 001E                   _CCPR1L 0015         ___awdiv@dividend 0072  
       __end_of___awtoft 071B         __end_of___ftpack 04C1                   i1l1501 063E  
                 i1l1505 0646                   i1l1521 06BF                   i1l1473 05FC  
                 i1l1491 061D                   i1l1479 0607                   i1l1497 0633  
                 i1l1489 060F                   u193_25 0612                   u195_25 061E  
                 u196_25 062A                   u197_25 0634           ??_initAtoD_PWM 0026  
                 _eCount 0054                   _aSpeed 0050                   ___ftge 0593  
              ??___awdiv 0074                ??___ftadd 004A                ??___ftmul 003A  
              ??___fttol 002A                   _vError 0065         __end_of_initPort 068E  
       ___awdiv@quotient 0077    ___ftmul@f3_as_product 003F                ??_countUp 0026  
                 saved_w 007E          __CFG_BORSEN$OFF 0000  __end_of__initialization 001E  
             ___ftadd@f1 0044               ___ftadd@f2 0047               ___ftge@ff1 0026  
             ___ftge@ff2 0029               ___awtoft@c 002E               ___ftmul@f1 0034  
             ___ftmul@f2 0037            __end_of_Mode0 0593            __end_of_Mode3 052A  
             ___fttol@f1 0026           __pcstackCOMMON 0070            __end_of_isrAD 06CC  
              ?_PControl 0070                  ??_Mode0 0046                  ??_Mode3 004E  
                ??_isrAD 0020               __pbssBANK0 004E            ??_SwitchDelay 0026  
           ??_PIDControl 00A3               _eddySensor 003B               __pmaintext 071B  
                ?___ftge 0026               _brakeFlash 06CC               __pintentry 0004  
                _CCP1CON 0017                ?___awtoft 002E                ?___ftpack 0026  
   __end_of_initAtoD_PWM 077B               _flashDelay 077B               ??_PControl 0044  
     __end_of_PIDControl 0286               _vErrorDiff 0058                ?_initPort 0070  
             _indexMotor 073E      __end_of_SwitchDelay 07A6          __size_of___ftge 005F  
                ___awdiv 05F2                  ___ftadd 0021                  ___ftmul 0286  
                ___fttol 0358                  _baseVel 0052                  _enCount 0056  
             ??___awtoft 0031               ??___ftpack 002B                  __ptext1 064D  
                __ptext2 0761                  __ptext3 073E                  __ptext4 079A  
                __ptext5 04C1                  __ptext6 016C                  __ptext7 0021  
                __ptext8 052A                  __ptext9 078B                  _encoder 003E  
                _countUp 078B                  clrloop0 07A7     end_of_initialization 001E  
             ??_initPort 0026              ?_brakeFlash 0070              ?_flashDelay 0070  
            _SwitchDelay 079A              ?_indexMotor 0070              ___ftmul@exp 003E  
  __size_of_initAtoD_PWM 001A           __end_of___ftge 05F2      start_initialization 0013  
      __size_of_PControl 0071      __size_of_brakeFlash 002B             _initAtoD_PWM 0761  
    __size_of_flashDelay 0010                 ??___ftge 002C              _blackButton 002C  
      __size_of___awtoft 0024        __size_of___ftpack 006A              __pbssCOMMON 0079  
              ___latbits 0001      __size_of_indexMotor 0023            __pcstackBANK0 0020  
          __pcstackBANK1 00A0                __pnvBANK0 005C                __pnvBANK1 00A5  
      __size_of_initPort 0041                 ?___awdiv 0070                 ?___ftadd 0044  
               ?___ftmul 0034                 ?___fttol 0026                _vErrorInt 005A  
               ?_countUp 0070           __size_of_Mode0 0069           __size_of_Mode3 0069  
         __size_of_isrAD 003E        interrupt_function 0004                clear_ram0 07A6  
           ??_brakeFlash 0029             ??_flashDelay 0026                 _PControl 03E6  
     __end_of_brakeFlash 06F7             ?_SwitchDelay 0070             ??_indexMotor 0046  
     __end_of_flashDelay 078B         __size_of___awdiv 005B         __size_of___ftadd 014B  
       __size_of___ftmul 00D2         __size_of___fttol 008E                 ___awtoft 06F7  
               ___ftpack 0457         __size_of_countUp 000F       __end_of_indexMotor 0761  
               __ptext10 06CC                 __ptext11 077B                 __ptext12 03E6  
               __ptext13 0358                 __ptext14 0286                 __ptext15 0593  
               __ptext16 06F7                 __ptext17 0457                 __ptext18 068E  
               __ptext19 05F2                 _initPort 064D            __size_of_main 0023  
               intlevel1 0000               _PIDControl 016C     __size_of_SwitchDelay 000C  
